<html>
<head>
<title>Socket.select()</title>
<link rel="stylesheet" href="semanualstyles.css" type="text/css">
<style type="text/css">
 p { margin-top: 0; margin-bottom: 0; }
</style>
<script language="JavaScript" src="TrueHelp.js"></script>
</head>
<body onload="thload()">
<div id=ienav>
<ilayer id=nsnav>
<br>
<center>
<p class=normal><a href="seisdkc-toc.htm" target="left">contents</a> &nbsp; <a href="seisdkc-index.htm" target="left">index</a> &nbsp; <a href="TH_1156.htm">previous</a> &nbsp; next</p>
</center>
<br>
<hr noshade size=1>
</ilayer>
</div>
<p class=sereffunclevel4>Socket.select()</p>
<table cellpadding=0>
<tr>
<td valign=top style="width: 0.922222in">
<p class=serefkey>syntax:</p></td>
<td valign=top style="width: 4.15278in">
<p class=sesyntax>Socket.select(<span class=truehelp-xe></span>[timeout&nbsp;,]&nbsp;socket1[,&nbsp;socket2</p>
<p class=sesyntax>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;...])</p></td>
</tr>
<tr>
<td valign=top style="width: 0.922222in">
<p class=serefkey>where:</p></td>
<td valign=top style="width: 4.15278in">
<p class=senormalpara>timeout - Maximum time to poll, in milliseconds, -1 for no timeout</p>
<p class=senormalpara-p>&nbsp;</p>
<p class=senormalpara>socketN - A list of sockets to poll for data, or an array of sockets</p><p class=senormalpara-p>&nbsp;</p>
</td>
</tr>
<tr>
<td valign=top style="width: 0.922222in">
<p class=serefkey>return:</p></td>
<td valign=top style="width: 4.15278in">
<p class=senormalpara>object - The first supplied socket object which is ready for reading, or <span class=secodephrase>null</span> if none is ready before the timeout is reached.</p><p class=senormalpara-p>&nbsp;</p>
</td>
</tr>
<tr>
<td valign=top style="width: 0.922222in">
<p class=serefkey>description:</p></td>
<td valign=top style="width: 4.15278in">
<p class=senormalpara>This method is an alternative to <span class=sepopuptopic><a href="TH_1149.htm" onClick="return thwindow('TH_1149.htm', 'GenPopup')">Socket ready()</a></span>.  The other ready method is a property of Socket instances, and only polls the current socket for data.  This global method allows for polling of multiple sources, which is needed when multiple sockets are open.  When any of the specified sockets are ready to be read from, then this method returns the first socket which is so ready.  Note that these sockets can be either connected sockets or listening sockets.  A listening socket that is ready to be read from means that a request is waiting.  If no timeout is specified, then -1 (infinite) timeout is used.</p><p class=senormalpara-p>&nbsp;</p>
</td>
</tr>
<tr>
<td valign=top style="width: 0.922222in">
<p class=serefkey>see:</p></td>
<td valign=top style="width: 4.15278in">
<p class=senormalpara><span class=secodephrase>#link &lt;sesock&gt;</span>, <span class=sejumptopic><a href="TH_1149.htm">Socket ready()</a></span></p><p class=senormalpara-p>&nbsp;</p>
</td>
</tr>
<tr>
<td valign=top style="width: 0.922222in">
<p class=serefkey>example:</p></td>
<td valign=top style="width: 4.15278in">
<p class=secodelines>var&nbsp;listenSocket1&nbsp;=&nbsp;Socket(&nbsp;1000&nbsp;);</p>
<p class=secodelines>var&nbsp;listenSocket2&nbsp;=&nbsp;Socket(&nbsp;1001&nbsp;);</p>
<p class=secodelines>&nbsp;</p>
<p class=secodelines>//&nbsp;Assume&nbsp;'done'&nbsp;is&nbsp;a&nbsp;global&nbsp;flag&nbsp;somewhere</p>
<p class=secodelines>if(&nbsp;listenSocket1&nbsp;!=&nbsp;null&nbsp;&amp;&amp;&nbsp;listenSocket2&nbsp;!=&nbsp;null&nbsp;)</p>
<p class=secodelines>{</p>
<p class=secodelines>&nbsp;&nbsp;&nbsp;while(&nbsp;!done&nbsp;)</p>
<p class=secodelines>&nbsp;&nbsp;&nbsp;{</p>
<p class=secodelines>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;acceptSocket;</p>
<p class=secodelines>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if((acceptSocket&nbsp;=&nbsp;Socket.select(100,</p>
<p class=secodelines>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[listenSocket1,&nbsp;listenSocket2]))&nbsp;!=&nbsp;null)</p>
<p class=secodelines>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{</p>
<p class=secodelines>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Connect&nbsp;with&nbsp;socket&nbsp;...</p>
<p class=secodelines>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</p>
<p class=secodelines>&nbsp;</p>
<p class=secodelines>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;Do&nbsp;other&nbsp;stuff&nbsp;...</p>
<p class=secodelines>&nbsp;&nbsp;&nbsp;}</p>
<p class=secodelines>}</p>
<p class=secodelines>&nbsp;</p>
<p class=secodelines>/*&nbsp;This&nbsp;code&nbsp;opens&nbsp;two&nbsp;sockets&nbsp;for&nbsp;listening,</p>
<p class=secodelines>&nbsp;*&nbsp;and&nbsp;then&nbsp;continuously&nbsp;polls</p>
<p class=secodelines>&nbsp;*&nbsp;these&nbsp;two&nbsp;sockets&nbsp;for&nbsp;incoming&nbsp;connections.</p>
<p class=secodelines>&nbsp;*&nbsp;Note&nbsp;that&nbsp;in&nbsp;a&nbsp;real</p>
<p class=secodelines>&nbsp;*&nbsp;program,&nbsp;it&nbsp;would&nbsp;be&nbsp;better&nbsp;to&nbsp;create</p>
<p class=secodelines>&nbsp;*&nbsp;a&nbsp;dynamic&nbsp;array&nbsp;which&nbsp;holds&nbsp;all</p>
<p class=secodelines>&nbsp;*&nbsp;of&nbsp;the&nbsp;open&nbsp;sockets.</p>
<p class=secodelines>&nbsp;*/</p></td>
</tr>
</table>
<p class=normal>&nbsp;</p>
<p>
</body>
</html>