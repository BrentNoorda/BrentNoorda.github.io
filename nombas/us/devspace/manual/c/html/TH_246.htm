<html>
<head>
<title>SCOPING</title>
<link rel="stylesheet" href="semanualstyles.css" type="text/css">
<style type="text/css">
 p { margin-top: 0; margin-bottom: 0; }
</style>
<script language="JavaScript" src="TrueHelp.js"></script>
</head>
<body onload="thload()">
<div id=ienav>
<ilayer id=nsnav>
<br>
<center>
<p class=normal><a href="seisdkc-toc.htm" target="left">contents</a> &nbsp; <a href="seisdkc-index.htm" target="left">index</a> &nbsp; <a href="TH_245.htm">previous</a> &nbsp; <a href="TH_247.htm">next</a></p>
</center>
<br>
<hr noshade size=1>
</ilayer>
</div>
<p class=heading-2>SCOPING</p>
<p class=heading-2-p>&nbsp;</p>
<p class=normal>A topic that leads to much confusion is that of scoping, and how to control it. Scoping is the process of resolving a variable name when it is encountered in a script. Normally, local variables are searched for the given variable name, if any, followed by global variables. The JavaScript <span class=secodephrase>with</span> statement is the most common way to alter scoping. The various scoping rules and issues will now be examined.</p>
<hr noshade size=1>
<p class=normal><a href="TH_247.htm"><img src="button.png" border=0></a><a href="TH_247.htm" style="text-decoration:none;">SCOPING - GLOBAL CODE</a></p>
<p class=normal><a href="TH_248.htm"><img src="button.png" border=0></a><a href="TH_248.htm" style="text-decoration:none;">SCOPING - FUNCTIONS</a></p>
<p>
</body>
</html>