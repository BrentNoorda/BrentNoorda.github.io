<html>
<head>
<title>Wrapper functions</title>
<link rel="stylesheet" href="semanualstyles.css" type="text/css">
<style type="text/css">
 p { margin-top: 0; margin-bottom: 0; }
</style>
<script language="JavaScript" src="TrueHelp.js"></script>
</head>
<body onload="thload()">
<div id=ienav>
<ilayer id=nsnav>
<br>
<center>
<p class=normal><a href="seisdkc-toc.htm" target="left">contents</a> &nbsp; <a href="seisdkc-index.htm" target="left">index</a> &nbsp; previous &nbsp; <a href="TH_373.htm">next</a></p>
</center>
<br>
<hr noshade size=1>
</ilayer>
</div>
<p class=heading-1>Wrapper functions </p>
<p class=heading-1-p>&nbsp;</p>
<p class=senormalpara>Wrapper functions are script functions that are written in C using the ScriptEase API instead of being written in JavaScript. From the script's point of view, they appear just like any other function and can be called identically. Most wrapper functions are initialized by the application before running scripts so as to be available to the script user right from the start. This is done by writing a wrapper function table and adding it to your <span class=secodephrase>secontext</span> using the <span class=secodephrase>seAddLibTable</span> ScriptEase API call. The table is added before the application makes any calls to the <span class=secodephrase>seEval</span> ScriptEase API call. All of the standard ECMAScript objects, such as <span class=secodephrase>String</span>, <span class=secodephrase>Math</span>, or <span class=secodephrase>Number</span>, are written using wrapper functions and wrapper function tables, so you have a large body of example wrapper functions included with ScriptEase to look at. </p>
<p class=senormalpara-p>&nbsp;</p>
<p class=senormalpara>Here is a sample wrapper function, to get an idea of how one looks. The rest of this chapter is devoted to demystifying it:</p>
<p class=senormalpara-p>&nbsp;</p>
<p class=secodelinesindented>&nbsp;&nbsp;&nbsp;SE_CALLBACK(&nbsp;void&nbsp;)</p>
<p class=secodelinesindented>print(secontext&nbsp;se,sememcount&nbsp;argc)</p>
<p class=secodelinesindented>{</p>
<p class=secodelinesindented>&nbsp;&nbsp;&nbsp;switch(&nbsp;seGetType(se,SE_ARGS,SE_INDEX(0))&nbsp;)</p>
<p class=secodelinesindented>&nbsp;&nbsp;&nbsp;{</p>
<p class=secodelinesindented>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;case&nbsp;SE_TYPE_NUMBER:</p>
<p class=secodelinesindented>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;for&nbsp;whatever&nbsp;reason,&nbsp;need&nbsp;a&nbsp;specific&nbsp;number</p>
<p class=secodelinesindented>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;format</p>
<p class=secodelinesindented>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</p>
<p class=secodelinesindented>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf("%0.20g",seGetNumber(se,SE_ARGS,SE_INDEX(0)));</p>
<p class=secodelinesindented>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</p>
<p class=secodelinesindented>&nbsp;</p>
<p class=secodelinesindented>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;default:</p>
<p class=secodelinesindented>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;/*&nbsp;Oh&nbsp;what&nbsp;the&nbsp;heck,&nbsp;just&nbsp;let&nbsp;ScriptEase&nbsp;convert</p>
<p class=secodelinesindented>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*&nbsp;whatever&nbsp;it&nbsp;is&nbsp;to&nbsp;a&nbsp;String.</p>
<p class=secodelinesindented>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;*/</p>
<p class=secodelinesindented>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;printf("%s",seGetString(se,SE_ARGS,SE_INDEX(0)));</p>
<p class=secodelinesindented>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;break;</p>
<p class=secodelinesindented>&nbsp;&nbsp;&nbsp;}</p>
<p class=secodelinesindented>&nbsp;&nbsp;&nbsp;/*&nbsp;let's&nbsp;return&nbsp;something&nbsp;because&nbsp;we&nbsp;can&nbsp;*/</p>
<p class=secodelinesindented>&nbsp;&nbsp;&nbsp;sePutString(se,SE_RETURN,SE_VALUE,</p>
<p class=secodelinesindented>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"Go&nbsp;away,&nbsp;you&nbsp;bother&nbsp;me&nbsp;kid.",SE_PS_STRLEN);</p>
<p class=secodelinesindented>}</p>
<p class=secodelinesindented>&nbsp;</p>
<p class=senormalpara>Before looking into the wrapper function tables, a basic overview of a wrapper function is necessary. The example above is simple but it demonstrates all that a wrapper function does. It gets its arguments, uses them to perform the body of the wrapper function, and returns a result.</p>
<p class=senormalpara-p>&nbsp;</p>
<hr noshade size=1>
<p class=normal><a href="TH_373.htm"><img src="button.png" border=0></a><a href="TH_373.htm" style="text-decoration:none;">THE FUNCTION HEADER</a></p>
<p class=normal><a href="TH_374.htm"><img src="button.png" border=0></a><a href="TH_374.htm" style="text-decoration:none;">THE ARGUMENTS</a></p>
<p class=normal><a href="TH_375.htm"><img src="button.png" border=0></a><a href="TH_375.htm" style="text-decoration:none;">THE RETURN</a></p>
<p class=normal><a href="TH_376.htm"><img src="button.png" border=0></a><a href="TH_376.htm" style="text-decoration:none;">WRAPPER TABLES</a></p>
<p class=normal><a href="TH_377.htm"><img src="button.png" border=0></a><a href="TH_377.htm" style="text-decoration:none;">WRAPPER MACROS</a></p>
<p>
</body>
</html>