<html>
<head>
<title>THE AT ERROR FUNCTION</title>
<link rel="stylesheet" href="semanualstyles.css" type="text/css">
<style type="text/css">
 p { margin-top: 0; margin-bottom: 0; }
</style>
<script language="JavaScript" src="TrueHelp.js"></script>
</head>
<body onload="thload()">
<div id=ienav>
<ilayer id=nsnav>
<br>
<center>
<p class=normal><a href="seisdkc-toc.htm" target="left">contents</a> &nbsp; <a href="seisdkc-index.htm" target="left">index</a> &nbsp; <a href="TH_199.htm">previous</a> &nbsp; <a href="TH_201.htm">next</a></p>
</center>
<br>
<hr noshade size=1>
</ilayer>
</div>
<p class=heading-3>THE AT ERROR FUNCTION</p>
<p class=heading-3-p>&nbsp;</p>
<p class=senormalpara>This step is very similar to the continue function, you must make a call to a ScriptEase debug API in your at-error function. If you do not currently have one, you must add one. It is in the context parameter structure just like the continue function is.</p>
<p class=senormalpara-p>&nbsp;</p>
<p class=secodelinesindented>&nbsp;&nbsp;&nbsp;void</p>
<p class=secodelinesindented>seDbgAtError(secontext&nbsp;se);</p>
<p class=secodelinesindented>&nbsp;</p>
<p class=senormalpara>This function will not lock your application up because it uses your continue function internally while it is waiting.</p>
<p class=senormalpara-p>&nbsp;</p>
<hr noshade size=1>
<p class=normal><a href="TH_201.htm"><img src="button.png" border=0></a><a href="TH_201.htm" style="text-decoration:none;">INVOKING THE DEBUGGER</a></p>
<p>
</body>
</html>