<html>
<head>
<title>Unix.wait()</title>
<link rel="stylesheet" href="semanualstyles.css" type="text/css">
<style type="text/css">
 p { margin-top: 0; margin-bottom: 0; }
</style>
<script language="JavaScript" src="TrueHelp.js"></script>
</head>
<body onload="thload()">
<div id=ienav>
<ilayer id=nsnav>
<br>
<center>
<p class=normal><a href="seisdkj-toc.htm" target="left">contents</a> &nbsp; <a href="seisdkj-index.htm" target="left">index</a> &nbsp; <a href="TH_879.htm">previous</a> &nbsp; <a href="TH_881.htm">next</a></p>
</center>
<br>
<hr noshade size=1>
</ilayer>
</div>
<p class=sereffunclevel4>Unix.wait()</p>
<table cellpadding=0>
<tr>
<td valign=top style="width: 0.922222in">
<p class=serefkey>syntax:</p></td>
<td valign=top style="width: 4.15278in">
<p class=sesyntax>Unix.wait(<span class=truehelp-xe></span>status)</p></td>
</tr>
<tr>
<td valign=top style="width: 0.922222in">
<p class=serefkey>where:</p></td>
<td valign=top style="width: 4.15278in">
<p class=senormalpara>status - status of the process.</p><p class=senormalpara-p>&nbsp;</p>
</td>
</tr>
<tr>
<td valign=top style="width: 0.922222in">
<p class=serefkey>return:</p></td>
<td valign=top style="width: 4.15278in">
<p class=senormalpara>number - process id of the exiting child, else -1 for error.</p><p class=senormalpara-p>&nbsp;</p>
</td>
</tr>
<tr>
<td valign=top style="width: 0.922222in">
<p class=serefkey>description:</p></td>
<td valign=top style="width: 4.15278in">
<p class=senormalpara>A call to <span class=secodephrase>Unix.wait()</span> will suspend execution until a child process terminates, then return the id of the particular child that exited. The status parameter is filled in with the status code for the process (this is the raw data exactly as returned by the underlying C wait() call provided for Unix gurus who find this information useful.) Any resources used by the Child are cleaned up. </p><p class=senormalpara-p>&nbsp;</p>
</td>
</tr>
<tr>
<td valign=top style="width: 0.922222in">
<p class=serefkey>see:</p></td>
<td valign=top style="width: 4.15278in">
<p class=senormalpara><span class=sejumptopic><a href="TH_876.htm">Unix.kill()</a></span>, <span class=sejumptopic><a href="TH_881.htm">Unix.waitpid()</a></span></p><p class=senormalpara-p>&nbsp;</p>
</td>
</tr>
<tr>
<td valign=top style="width: 0.922222in">
<p class=serefkey>example:</p></td>
<td valign=top style="width: 4.15278in">
<p class=secodelines>//&nbsp;Here&nbsp;is&nbsp;a&nbsp;simple&nbsp;example:</p>
<p class=secodelines>&nbsp;</p>
<p class=secodelines>function&nbsp;main()</p>
<p class=secodelines>{</p>
<p class=secodelines>&nbsp;&nbsp;&nbsp;var&nbsp;id&nbsp;=&nbsp;Unix.fork();</p>
<p class=secodelines>&nbsp;</p>
<p class=secodelines>&nbsp;&nbsp;&nbsp;if(&nbsp;id==0&nbsp;)</p>
<p class=secodelines>&nbsp;&nbsp;&nbsp;{</p>
<p class=secodelines>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clib.printf("Child&nbsp;here!\n");</p>
<p class=secodelines>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clib.exit(0);</p>
<p class=secodelines>&nbsp;&nbsp;&nbsp;}</p>
<p class=secodelines>&nbsp;&nbsp;&nbsp;else</p>
<p class=secodelines>&nbsp;&nbsp;&nbsp;{</p>
<p class=secodelines>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clib.printf("started&nbsp;child&nbsp;process&nbsp;%d\n",&nbsp;id);</p>
<p class=secodelines>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clib.assert(&nbsp;Unix.wait(var&nbsp;dontcare)==id&nbsp;);</p>
<p class=secodelines>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Clib.printf("child&nbsp;process&nbsp;is&nbsp;dead&nbsp;meat.\n");</p>
<p class=secodelines>&nbsp;&nbsp;&nbsp;}</p>
<p class=secodelines>}</p></td>
</tr>
</table>
<p class=normal>&nbsp;</p>
<hr noshade size=1>
<p class=normal><a href="TH_881.htm"><img src="button.png" border=0></a><a href="TH_881.htm" style="text-decoration:none;">Unix.waitpid()</a></p>
<p>
</body>
</html>