
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 FINAL//EN">
<HTML><!-- #BeginTemplate "/us/Templates/erratapage.dwt" -->
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<!-- #BeginEditable "doctitle" -->
<TITLE>ScriptEase ISDK/Java 5.00x Errata</TITLE>
<!-- #EndEditable --> <!-- begin metaTags -->
<META NAME="keywords" CONTENT="javascript,ecmascript,ecma,scriptease,jscript,scripting,nombas,isdk,sedesk,web application development,embedded devices,distributed computing,peer-to-peer,p2p,peer,data mining,javascript.com,cycletraders,integrated sdk,script ease,java,c++,c,simplicity,power,palm,windows ce,integration: sdk,integration:sdk,scriptease:desktop,scriptease: desktop,se:desktop,se:desk,se:isdk, se: isdk,development tools,devtools">
<META HTTP-EQUIV="DESCRIPTION" CONTENT="Nombas delivers simplicity and power through scripting by providing market-leading development tools and software for JavaScript and ECMAScript.">
<!-- end metaTags -->
<!-- begin navbar includes -->
<SCRIPT language=JavaScript1.2>
  navbarPath = '../../../';
</SCRIPT>
<SCRIPT language=JavaScript1.2 SRC="../../../navbarData.js"></SCRIPT>
<SCRIPT language=JavaScript1.2 SRC="../../../navbarMenu.js"></SCRIPT>
<SCRIPT language=JavaScript SRC="../../../imgRollover.js"></SCRIPT>
<!-- end navbar includes -->
<!-- begin style and icon definition -->
<LINK REL="SHORTCUT ICON" HREF="../../../nombas.ico">
<STYLE>
A:hover { color:#941810;}
</STYLE>
<!-- end style and icon definition -->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-1754630-10']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
</HEAD>
<BODY BGCOLOR="#06086F" LINK="#0000FF" VLINK="#800080" TEXT="#000000" TOPMARGIN=0 LEFTMARGIN=0 MARGINWIDTH=0 MARGINHEIGHT=0>
<table width="632" border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td>
<TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=213>
  <TR VALIGN=TOP ALIGN=LEFT>
    <TD WIDTH=28 HEIGHT=4><IMG SRC="../../../clearpixel.gif" WIDTH=28 HEIGHT=1 BORDER=0></TD>
    <TD></TD>
  </TR>
  <TR VALIGN=TOP ALIGN=LEFT>
    <TD HEIGHT=60></TD>
          <TD WIDTH=185 ALIGN=LEFT VALIGN=TOP><A HREF="../../../index.htm"><IMG ID="Picture1" HEIGHT=60 WIDTH=185 SRC="../../../logo.gif" BORDER=0 alt="Nombas Homepage"></A></TD>
  </TR>
</TABLE>
    <div id="nombas-legacy"></div>
<TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0>
  <TR VALIGN=TOP ALIGN=LEFT>
    <TD WIDTH=30 HEIGHT=10><IMG SRC="../../../clearpixel.gif" WIDTH=30 HEIGHT=1 BORDER=0></TD>
    <TD></TD>
  </TR>
  <TR VALIGN=TOP ALIGN=LEFT>
    <TD></TD>
    <TD WIDTH=582>
      <TABLE ID="Table1" BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=582>
        <TR>
          <TD WIDTH=97>
                  <P><A HREF="../../../scripting/scripting.htm"
                            onmouseover="changeImages('scripting', '../../../htab_scripting.gif'); popUp('elMenu1',event); return true;"
onmouseout="changeImages('scripting', '../../../tab_scripting.gif'); popDown('elMenu1'); return true;"
><IMG
                             ID="scripting" HEIGHT=21 WIDTH=97 SRC="../../../tab_scripting.gif" VSPACE=0 HSPACE=0 ALIGN="TOP" BORDER=0 name="scripting" alt="Scripting"></A>
                </TD>
          <TD WIDTH=97>
                  <P><A HREF="../../../products/products.htm"
                            onmouseover="changeImages('products', '../../../htab_products.gif'); popUp('elMenu2',event); return true;"
onmouseout="changeImages('products', '../../../tab_products.gif'); popDown('elMenu2'); return true;"><IMG ID="products"
                             HEIGHT=21 WIDTH=97 SRC="../../../tab_products.gif" VSPACE=0 HSPACE=0 ALIGN="TOP" BORDER=0 name=products alt="Products"></A>
                </TD>
          <TD WIDTH=97>
                  <P><A HREF="../../../purchase/purchase.htm" onmouseover="changeImages('purchase', '../../../htab_purchase.gif');return true;"
onmouseout="changeImages('purchase', '../../../tab_purchase.gif');return true;"><IMG ID="purchase"
                             HEIGHT=21 WIDTH=97 SRC="../../../tab_purchase.gif" VSPACE=0 HSPACE=0 ALIGN="TOP" BORDER=0 name=purchase alt="Purchase"></A>
                </TD>
          <TD WIDTH=97>
                  <P><A HREF="../../../download/ndownload.htm" onmouseover="changeImages('download', '../../../htab_download.gif');return true;"
onmouseout="changeImages('download', '../../../tab_download.gif');return true;"><IMG ID="download"
                             HEIGHT=21 WIDTH=97 SRC="../../../tab_download.gif" VSPACE=0 HSPACE=0 ALIGN="TOP" BORDER=0 name=download alt="Download"></A>
                </TD>
          <TD WIDTH=97>
                  <P><A target="support" HREF="http://support.nombas.com/" onmouseover="changeImages('support', '../../../htab_support.gif'); return true;"
onmouseout="changeImages('support', '../../../tab_support.gif'); return true;"><IMG ID="support"
                             HEIGHT=21 WIDTH=97 SRC="../../../tab_support.gif" VSPACE=0 HSPACE=0 ALIGN="TOP" BORDER=0 name=support alt="Support"></A>
                </TD>
          <TD WIDTH=97>
                  <P><A HREF="../../../company/company.htm"
                            onmouseover="changeImages('company', '../../../htab_company.gif'); popUp('elMenu6',event); return true;"
onmouseout="changeImages('company', '../../../tab_company.gif'); popDown('elMenu6'); return true;"><IMG ID="company"
                             HEIGHT=21 WIDTH=97 SRC="../../../tab_company.gif" VSPACE=0 HSPACE=0 ALIGN="TOP" BORDER=0 name=company alt="Company"></A>
                </TD>
        </TR>
      </TABLE>
    </TD>
  </TR>
</TABLE>
      <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=100%>
        <TR VALIGN=TOP ALIGN=LEFT>
    <TD WIDTH=5 HEIGHT=20><IMG SRC="../../../clearpixel.gif" WIDTH=5 HEIGHT=1 BORDER=0></TD>
          <TD>
            <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=100% HEIGHT=20 bgcolor="#FFFFFF">
              <TR ALIGN=LEFT VALIGN=TOP>
          <TD>
                  <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=100%>
                    <TR VALIGN=TOP ALIGN=LEFT>
                <TD WIDTH=20 HEIGHT=20 ALIGN=LEFT VALIGN=TOP><IMG ID="Picture12" HEIGHT=20 WIDTH=20 SRC="../../../curve_topleft.gif" BORDER=0></TD>
                      <TD><IMG SRC="../../../clearpixel.gif" WIDTH=592 HEIGHT=1 BORDER=0></TD>
                <TD WIDTH=20 ALIGN=LEFT VALIGN=TOP><IMG ID="Picture10" HEIGHT=20 WIDTH=20 SRC="../../../curve_top.gif" BORDER=0></TD>
              </TR>
            </TABLE>
          </TD>
        </TR>
      </TABLE>
    </TD>
  </TR>
</TABLE>
<TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=637>
  <TR VALIGN=TOP ALIGN=LEFT>
    <TD HEIGHT=471 width="5"></TD>
    <TD COLSPAN=2 height="471">
      <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=632 HEIGHT=200 bgcolor="#FFFFFF">
        <TR ALIGN=LEFT VALIGN=TOP>
          <TD height="471">
            <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=516>
              <TR VALIGN=TOP ALIGN=LEFT>
                <TD WIDTH=14 HEIGHT=1><IMG SRC="../../../clearpixel.gif" WIDTH=13 HEIGHT=1 BORDER=0></TD>
                <TD WIDTH=502><IMG SRC="../../../clearpixel.gif" WIDTH=316 HEIGHT=1 BORDER=0></TD>
              </TR>
              <TR VALIGN=TOP ALIGN=LEFT>
                <TD width="14"></TD>
                <TD WIDTH=502><!-- #BeginEditable "hier" -->
                        <P ALIGN=LEFT><A HREF="../../../index.htm"><FONT SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">Nombas</FONT></A><FONT SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica"> 
                          &gt; <a HREF="../../index.htm">SE:ISDK DevSpace</a> 
                          &gt; <a href="../index.htm">Errata</a> &gt; Integration 
                          SDK 5.00x Errata</FONT> 
                        <!-- #EndEditable --></TD>
              </TR>
            </TABLE>
            <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=300>
              <TR VALIGN=TOP ALIGN=LEFT>
                <TD WIDTH=15 HEIGHT=5><IMG SRC="../../../clearpixel.gif" WIDTH=15 HEIGHT=1 BORDER=0></TD>
                <TD></TD>
              </TR>
              <TR VALIGN=TOP ALIGN=LEFT>
                <TD HEIGHT=80></TD>
                <TD WIDTH=600 ALIGN=LEFT VALIGN=TOP><IMG ID="Picture14" HEIGHT=80 WIDTH=600 SRC="../../bnr_devspace.gif" BORDER=0></TD>
              </TR>
              <TR VALIGN=TOP ALIGN=LEFT>
                <TD HEIGHT=368></TD>
                <TD WIDTH=600 ALIGN=LEFT VALIGN=TOP height="368">
                  <table width="100%" border="0">
                    <tr>
                      <td colspan="4" height="9"><img SRC="../../../clearpixel.gif" width="1" height="1"></td>
                    </tr>
                    <tr>
                      <td width="1" height="326">&nbsp;</td>
                            <td valign="top" height="326"><!-- #BeginEditable "main" --> 
                              <p><font size="4" face="Verdana, Arial, Helvetica, sans-serif"><b>Integration 
                                SDK 5.00x Errata</b></font><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><br>
                                <i><b>Fixes Affecting Users of the ScriptEase 
                                ISDKs</b></i></font></p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#v500f">5.00f 
                                  API</a> - latest update: July 24, 2003</font></li>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#v500e">5.00e 
                                  API</a> - latest update: January 6, 2003</font></li>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#v500d">5.00d 
                                  API</a> - latest update: October 14, 2002</font></li>
                              </ul>
                              <hr width="90%">
                              <p><a name="v500f"></a><font face="Verdana, Arial, Helvetica, sans-serif" size="2"> 
                                API Errata, version <b>5.00f<br>
                                </b>&nbsp; <b>New</b>, July 24, 2003</font></p>
                              <p> 
                              <ul>
                                <li><a href="#sscmss"><font face="Verdana, Arial, Helvetica, sans-serif" size="2">system 
                                  can become corrupted if number of objects in 
                                  use is greater than MARK_STACK_SIZE </font></a></li>
                                <li><a href="#cpmpi"><font face="Verdana, Arial, Helvetica, sans-serif" size="2">cached 
                                  prototypes (Array, Function, Object, String) 
                                  miss __parent__ inheritance</font></a></li>
                                <li><a href="#tcgis"><font face="Verdana, Arial, Helvetica, sans-serif" size="2">try/catch 
                                  grows internal stack</font></a></li>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#scfwjsuum">seCreateFiber() 
                                  with JSE_SECURE uses unreleased memory</a></font></li>
                                <li><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><a href="#npewwwf">Null 
                                  Pointer Exceptions when working with fibers 
                                  </a></font></li>
                                <li><a href="#edi"><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Empty 
                                  #defines ignored</font></a></li>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#iaipdbi">The 
                                  #ifdef and #ifndef preprocessor directives behave 
                                  incorrectly</a></font></li>
                              </ul>
                              <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a name="v500e"></a> 
                                API Errata, version <b>5.00e<br>
                                </b>&nbsp; <b>New</b>, February 14, 2003</font></p>
                              <p> 
                              <ul>
                                <li><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><a href="#npewwwf">Null 
                                  Pointer Exceptions when working with fibers</a></font></li>
                                <li><a href="#reun"><font face="Verdana, Arial, Helvetica, sans-serif" size="2">RegExp.$x 
                                  and RegExp.lastParen not overwriting previous 
                                  results with "undefined" </font></a></li>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#nexnfd">Number 
                                  toExponential() incorrect if fractionDigits 
                                  not specified </a></font></li>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#ntpi">Number 
                                  toPrecision() incorrect</a></font></li>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#dudgv">discrepencies 
                                  using delete on global variables </a> </font></li>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#srnin">string 
                                  replace, if no matches found, is not returning 
                                  the initial string </a></font></li>
                              </ul>
                              <font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b> 
                              </b></font> 
                              <p></p>
                              <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a name="v500d"></a> 
                                API Errata, version <b>5.00d</b><br>
                                &nbsp;&nbsp;<b>New</b>, October 14, 2002</font> 
                              </p>
                              <ul>
                                <li><a href="#cfrfl"><font face="Verdana, Arial, Helvetica, sans-serif" size="2">seCreateFiber 
                                  reinitializes function libraries</font></a> 
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#eldv">Errors 
                                  with extremely large Date values</a></font></font> 
                                <li> <a href="#vsgax"><font face="Verdana, Arial, Helvetica, sans-serif" size="2">virtual-stack 
                                  growth if retrieving values after an exception</font></a> 
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#dgnhp">dynamic 
                                  get is not being called if SEHasPropCallback 
                                  not implemented</a></font> 
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#ssres">string.split() 
                                  incorrect if regular expression used as separator</a></font></font></font></font></font></font> 
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#sdisee">seDestroyContext 
                                  cannot be called within seEva</a></font><a href="#sdisee">l</a> 
                                <li><a href="#cenf"><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><font face="Verdana, Arial, Helvetica, sans-serif" size="2">crash 
                                  with eval() in nested function</font></font></a> 
                                <li><a href="#sicse"><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><font face="Verdana, Arial, Helvetica, sans-serif" size="2">STACK_INFO 
                                  crashes within nested seEval()</font></font></a> 
                                <li><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><a href="#stosf">stock 
                                  objects passed to seEval with SE.FUNC will not 
                                  work</a></font> 
                                <li><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><a href="#gtyp">assert() 
                                  or memory leak from seEval(...SE_FUNC..) if 
                                  run-time error in script function</a></font> 
                                <li><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><a href="#ngfnw">SE_NEW_GLOBALS 
                                  flag for seEval() doesn't work</a></font> 
                                <li><a href="#fpan"><font size="2" face="Verdana, Arial, Helvetica, sans-serif">Function.prototype.apply() 
                                  not accepting null for thisObj parameter</font></a> 
                                <li><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><a href="#evfx">seEval(...SE_FUNC...) 
                                  does not generate exception if object is not 
                                  a function</a></font> 
                              </ul>
                              <font face="Verdana, Arial, Helvetica, sans-serif" size="2"> 
                              </font><font face="Verdana, Arial, Helvetica, sans-serif" size="2"> 
                              </font> 
                              <hr width="90%">
                              <p> 
                              <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b><font size="3">The 
                                Details</font></b> </font></p>
                              <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b>for 
                                5.00f</b> -- (may apply to earlier versions)</font></p>
                              <p><a name="sscmss"></a></p>
                              <p> 
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>system 
                                  can become corrupted if number of objects in 
                                  use is greater than MARK_STACK_SIZE</b> <br>
                                  (for ISDK/Java 5.00f)<br>
                                  </font></li>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"> 
                                  Bug: If the number of objects in use is greater 
                                  than MARK_STACK_SIZE (defined in Call.jh) then 
                                  memory may become corrupted. This is a rare 
                                  oocurence and very difficult to duplicate. If 
                                  you have experienced such corruption when running 
                                  with very many objects, and if the problem is 
                                  difficult to duplicate, then this may be the 
                                  cause.</font></p>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix</b>: 
                                  In COM/Nombas/jse/Isdk/Garbage.jsrc, method 
                                  mark(), this block near line 670:</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   for( i=0;i&lt;used;i++ )
   {
      SE_VAR var;
   
      var = mems[i];</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">should 
                                  become:</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   for( i=0;i&lt;used;i++ )
   {
      SE_VAR var;
      int vn = mems[i].name;
      if ( -1 != vn
           && StringTable.IsNormalStringTableEntry(vn)
           && (0 == (basecall.Global.stringTable.HashEntryFromVarName(vn).locks
               & StringTable.SWEEP_BIT)) )
      {
         add_it = true;
         break;
      }
      
      var = mems[i];</font></pre>
                              </ul>
                              <p><a name="cpmpi"></a></p>
                              <p> 
                              <ul>
                                <li><b><font face="Verdana, Arial, Helvetica, sans-serif" size="2">cached 
                                  prototypes (Array, Function, Object, String) 
                                  miss __parent__ inheritance</font></b><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><br>
                                  (for ISDK/Java 5.00f)</font></li>
                                <p> <font face="Verdana, Arial, Helvetica, sans-serif" size="2">Bug: 
                                  Some common objects have their Object.prototype 
                                  object cached for faster access. These objects 
                                  are Array, Function, Object, and String. When 
                                  refreshing this "prototype cache" the real objects 
                                  may not be found if inheritance is through the 
                                  __parent__ chain instead of through standard 
                                  _prototype chain. The resulting bug will usally 
                                  be that statements that use these cached prototypes 
                                  (e.g. new String(), "foo".toString()) will fail, 
                                  while objects that do not use this cache (e.g. 
                                  new Date()) will work. </font></p>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix:</b> 
                                  The method AssignGlobalPrototype() in COM/Nombas/jse/Isdk/Call.jsrc 
                                  should be repleaced with the version found at 
                                  <a href="ftp://ftp.nombas.com/pub/isdkeval/se500/assignglobalprototype_java.txt">ftp://ftp.nombas.com/pub/isdkeval/se500/assignglobalprototype_java.txt</a> 
                                  </font></p>
                              </ul>
                              <p><a name="tcgis"></a></p>
                              <p> 
                              <ul>
                                <li><b><font face="Verdana, Arial, Helvetica, sans-serif" size="2">try/catch 
                                  grows internal stack</font></b><br>
                                  <font face="Verdana, Arial, Helvetica, sans-serif" size="2">(for 
                                  ISDK/Java 5.00f)</font></li>
                                <p> <font face="Verdana, Arial, Helvetica, sans-serif" size="2">Bug: 
                                  Each try/catch will leave one element on the 
                                  internal stack. The stack space is restored 
                                  whenever the containing function returns. But 
                                  if the function does not return then many try/catch 
                                  blocks will eventually throw an out-of-stack 
                                  error. For example, the following script would 
                                  eventually exhause internal stack space: </font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">  for ( ; ; )
  {
     try
     {
        throw "blah";
     }
     catch(e)
     {
     }
  }
</font>
</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix</b>: 
                                  In COM/Nombas/jse/Isdk/Secode.jsrc, method ReasonToQuit(), 
                                  remove all lines declaring or referencing the 
                                  variable w_new_loc.</font> </p>
                              </ul>
                              <p><a name="scfwjsuum"></a></p>
                              <p> 
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif"><b><font size="2">seCreateFiber() 
                                  with JSE_SECURE uses unreleased memory</font></b></font><br>
                                  <font face="Verdana, Arial, Helvetica, sans-serif" size="2">(for 
                                  ISDK/Java 5.00f)</font></li>
                                <p> <font face="Verdana, Arial, Helvetica, sans-serif" size="2">Bug: 
                                  If compiling with JSE_SECURE defined, then each 
                                  call to seCreateFiber() creates objects that 
                                  are not released until the top-level context 
                                  is destroyed. </font></p>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix: 
                                  </b>The simplest fix is to remove JSE_SECURE 
                                  from your JSEOPT.JH file. If compiling with 
                                  JSE_TASK_SCHEDULER and JSE_SECURE then in COM/Nombas/jse/Isdk/Call.jsrc, 
                                  method newSettings(), at about line 3758 replace 
                                  this line:</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   if( success && (this.prev == null||</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">with:</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   if( success && ((this.prev == null && this.fiber_prev == null) ||</font></pre>
                              </ul>
                              <p><a name="#npewwwf"></a></p>
                              <p> 
                              <ul>
                                <li><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b>Null 
                                  Pointer Exceptions when working with fibers</b></font><br>
                                  <font face="Verdana, Arial, Helvetica, sans-serif" size="2">(for 
                                  ISDK/Java 5.00f)</font></li>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Bug: 
                                  Destroying a fiber with seDestroyContext() causes 
                                  Null Pointer Exceptions to be thrown when interpreting 
                                  in sibling contexts.</font></p>
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b>Fix:</b> 
                                  All of the following changes are to be made 
                                  in COM/Nombas/jse/Isdk/Call.jsrc:</font></p>
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif">At 
                                  the beginning of the interpret(int, boolean, 
                                  boolean) method, around line 3213, remove this 
                                  line:</font></p>
                                <pre>   call.Global.api_mark++; /* all temps here on are cleaned when this mark is cleaned */</pre>
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif">Next, 
                                  in the delete() method around line 3436, replace 
                                  this code:</font></p>
                                <pre>   # if JSE_TRACKVARS==1
     if ( null == call.prev )
     {</pre>
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif">with 
                                  this:</font></p>
                                <pre>   # if JSE_TRACKVARS==1
     if ( null == call.prev
   #      if JSE_TASK_SCHEDULER==1
          && null == call.fiber_prev
   #      endif
         )
     {</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">A 
                                  little further down in the delete() method, 
                                  around line 3468, remove this block of code:</font></p>
                                <pre>   {
      boolean had_wrapper_temp = false;
      SE_VAR old_ret = null;
      byte old_state = FlowFlags.StateNormal;

      /* delete any remaining temp vars */
      SE500_CALL_KILL_TEMPVARS_GUTS(call);


      call.Global.api_mark--; /* no more temps will be at this level */
   } </pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">A 
                                  couple lines down, remove this block of code 
                                  as well:</font></p>
                                <pre>   /* Kill all remaining temp stuff */
   while( call.Global.api_local_temps.next!=null )
   {
      call.seTempFreeObject(call.Global.api_local_temps.next);
   }</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Finally, 
                                  a few more lines down you will find a call to 
                                  call.cleanupGlobal(). Insert this code directly 
                                  before that call:</font></p>
                                <pre>   boolean had_wrapper_temp = false;
   SE_VAR old_ret = null;
   byte old_state = FlowFlags.StateNormal;

   /* delete any remaining temp vars */
   SE500_CALL_KILL_TEMPVARS_GUTS(call);


</pre>
                              </ul>
                              <p><a name="edi"></a></p>
                              <p> 
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Empty 
                                  #defines ignored</b><br>
                                  (for ISDK/Java 5.00f)</font></li>
                              </ul>
                              <blockquote> 
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Bug: 
                                  If a preprocessor macro is defined without a 
                                  body the engine will not consider it 'defined'. 
                                  </font></p>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix</b>: 
                                  In COM/Nombas/jse/Isdk/SEDirective.jsrc, function() 
                                  method of the DefineHandler class, around line 
                                  153 find this block:</font></p>
                                <pre>   if ( WithinComment )
   {
      /* if ended within comment, then stop where that comment begins */
      end = BeginComment;
   }</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">and 
                                  add this else block:</font></p>
                                <pre>   else
   {
      end = i;
   }</pre>
                              </blockquote>
                              <p><a name="iaipdbi"></a></p>
                              <p> 
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>The 
                                  #ifdef and #ifndef preprocessor directives behave 
                                  incorrectly</b></font><br>
                                  (for ISDK/Java 5.00f)</li>
                              </ul>
                              <blockquote> 
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Bug: 
                                  The #ifdef and #ifndef directives rely on comparisons 
                                  against the ECMAScript undefined value to determine 
                                  if a symbol is defined. This behavior causes 
                                  errors when the directive is applied to an empty 
                                  macro. These directives now only test names 
                                  in respect to whether or not they have been 
                                  defined by #define, or are members of the SE.DEFINE 
                                  object.</font></p>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix</b>: 
                                  in COM/Nombas/jse/Isdk/Source.jsrc, method conditionalCompilationFilter(), 
                                  around line 598 change this line:</font></p>
                                <pre>   if ( !evaluateConditionalCompilation( call, SourceToEvaluate, \
   TextCore.CCD_ifdef==find,true) )</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">to 
                                  this:</font></p>
                                <pre>   if ( !evaluateIfDef( call, SourceToEvaluate, TextCore.CCD_ifdef==find ) )</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Next, 
                                  the sourceEvaluteIfDef() method needs to be 
                                  added to the Source class in COM/Nombas/jse/Isdk/Source.jsrc. 
                                  The source for this methodcan be found at <a href="ftp://ftp.nombas.com/pub/isdkeval/se500/ifdef.java">ftp://ftp.nombas.com/pub/isdkeval/se500/ifdef.java</a></font></p>
                                <p>&nbsp;</p>
                              </blockquote>
                              <font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b>for 
                              5.00e</b> -- (may apply to earlier versions)</font> 
                              <p><font face="Courier New, Courier, mono" size="2"><a name="reun"></a> 
                                </font> </p>
                              <ul>
                                <li> 
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>RegExp.$x 
                                    and RegExp.lastParen not overwriting previous 
                                    results with "undefined&quot;<br>
                                    </b>(for ISDK/Java 5.00e)</font></p>
                                </li>
                                <p> <font face="Verdana, Arial, Helvetica, sans-serif" size="2">Bug: 
                                  When the results of a regular expression call 
                                  should result in undefined for for RegExp.$1...RegExp.$9 
                                  or RegExp.lastParen, the results of the most-recent 
                                  previous call are not over-written with undefined.</font></p>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix</b>: 
                                  In COM/Nombas/jse/libraries/SERegExp.jsrc, function 
                                  RegExp_ExecOrCallOrTest(), the three calls to 
                                  se.sePutUndefined(...) (at lines 609, 656, and 
                                  679) should be replaced with seMustPutUndefined(...). 
                                  </font></p>
                              </ul>
                              <p><a name="nexnfd"></a></p>
                              <p> 
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Number 
                                  toExponential() incorrect if fractionDigits 
                                  not specified<br>
                                  </b>(for ISDK/Java 5.00e)</font></li>
                                <p> <font face="Verdana, Arial, Helvetica, sans-serif" size="2">Bug: 
                                  Number.prototype.toExponential(fractionDigits) 
                                  is treating fractionDigits as 0 if unspecified. 
                                  Instead toExponential() should use as many digits 
                                  as necessary. </font></p>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix</b>: 
                                  In COM/Nombas/jse/libraries/ECMAObject.jsrc, 
                                  function Ecma_Number_toSomething(), at about 
                                  line 1825 a block of code should be added after 
                                  f = 0; as follows: </font></p>
                                <pre>    if ( _toExponential == toWhat )
    {
       String[] buffer = {null};
       int cptr = 0;


       /* convert using standard tostring rules */
       Utility.EcmaNumberToString(buffer,x);

       /* from buffer count how many digits are needed after the decimal,
        * that's all digits minus 1
        */


       if ( buffer[0].charAt(cptr) == '-' ) cptr++; /* skip any negative */
       int length = buffer[0].length();

       while ( cptr < length )
       {
          char c = buffer[0].charAt(cptr);
          cptr++;
          if ( '0' <= c && c <= '9' )
             f++;
          else if ( '.' != c )
             break;
       }
       f--;
     }</pre>
                              </ul>
                              <p><a name="ntpi"></a></p>
                              <p> 
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Number 
                                  toPrecision() incorrect<br>
                                  </b>(for ISDK/Java 5.00e)<b> </b></font></li>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"> 
                                  Bug: Number.prototype.toPrecision(precision) 
                                  is converting precision digits beyond the decimal, 
                                  when it should be converting precision-1 digits. 
                                  </font></p>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Fix: 
                                  In COM/Nombas/jse/libraries/ECMAObject.jsrc, 
                                  function Ecma_Number_toSomething(), at about 
                                  line 1943 the entire toPrecision block should 
                                  be replaced with this code: </font></p>
                                <pre>    else
    {
       senumber abs_x = Math.abs(x);


       /* field width must be an int */
       /* if x>=pow(10,-6) && &lt; pow(10,f), use fixed-point notation
        * otherwise, use exponential notation */
       if( (Math.pow((senumber)10,(senumber)-6) > x= abs_x ) &&
         (abs_x < Math.pow((senumber)10,(senumber)f)) )
       {
          senumber f10 = Math.log(abs_x)/Math.log(10);

          int d10 = (int)f10;
          f -= d10;
          if ( !jseIsNegative(f10) )
             f--;

          pattern = "0";
          if ( f > 0 )
          {
             pattern += ".";
             for ( int i = 0; i < f; i++ )
                pattern = pattern + "0";
          }
          else
          {
             pattern = "0.00";
          }
          form.applyPattern( pattern );

          buffer = form.format(x);
       }
       else
       {
          java.math.BigDecimal foo = new java.math.BigDecimal(x);

          foo = foo.movePointLeft(f);
          foo = foo.setScale(0,BigDecimal.ROUND_HALF_UP);
          foo = foo.movePointRight(f);

          f = f-1;
          pattern = "0";

          if ( f > 0 )
             pattern += ".";

          for ( int i = 0; i < f; i++ )
             pattern = pattern + "0";

          pattern = pattern + "E0";
          form.applyPattern( pattern );

          buffer = form.format(foo.doubleValue());
          buffer = convertExponentialFormat(buffer);
       }
    }
</pre>
                                <p>Also, add this method to the ECMAObject class 
                                  (in COM/Nombas/jse/libraries/ECMAObject.jsrc):</p>
                                <pre>    static private String convertExponentialFormat(String format)
    {
      StringBuffer temp = new StringBuffer();

      /* Convert the 'E' to 'e+' or 'e-' */
      for( int i=0, len = format.length(); i&lt;len; i++ )
      {
         char c = format.charAt(i);
         if ( c == 'E' )
         {
            temp.append("e");

            if ( format.charAt(i+1) != '-' )
            {
               temp.append("+");
            }
         }
         else
         {
            temp.append(c);
         }
      }

      return temp.toString();

    }</pre>
                              </ul>
                              <p></p>
                              <p><a name="dudgv"></a></p>
                              <p> 
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>discrepencies 
                                  using delete on global variables <br>
                                  </b>(for ISDK/Java 5.00e)</font></li>
                                <p> <font face="Verdana, Arial, Helvetica, sans-serif" size="2">Bug: 
                                  When delete is used on global variables that 
                                  were not created with the var keyword, the variables 
                                  are not being deleted or the wrong boolean is 
                                  being returned. </font></p>
                                <p><b><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Fix:</font></b> 
                                  <font face="Verdana, Arial, Helvetica, sans-serif" size="2">In 
                                  COM/Nombas/jse/Isdk/SECompile.jsrc, method operatorExpression() 
                                  under case seTokDelete:, replace this else block 
                                  at about line 2916: </font> </p>
                                <pre>    else { /* not a reference, return 'true', 11.4.1 */ ... } </pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">with 
                                  this code:</font></p>
                                <pre>    else if( this.expr.type==SEExpression.GLOBAL )
    {
       this.addItem(sePushGlobalObject);
       this.addItem(seDeleteMember,this.expr.name);
    }
    else
    {
       /* not a reference, return 'true', 11.4.1 */
       this.discard();
       this.addItem(sePushTrue);
    } </pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Then 
                                  in COM/Nombas/jse/Isdk/Call.jsrc, function(), 
                                  find this comment: </font></p>
                                <pre>    /* no need to set the attributes directly, the variable object
     * cannot be referenced by the script, which makes it
     * effectively 'DontDelete'.
     */</pre>
                                <p> <font face="Verdana, Arial, Helvetica, sans-serif" size="2">which 
                                  is no longer true. Replace it with: </font> 
                                </p>
                                <pre>    SEVAR_GET_REFBASE(wLoc).setAttributes(this, (int)wLoc.num_val,
                                         (byte)SE.DONTDELETE);


 </pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">and 
                                  in COM/Nombas/jse/Isdk/_SEObject.jsrc, method 
                                  deleteMember(), at about line 1502 the case 
                                  with the comment </font></p>
                                <pre>    /* member doesn't exist; don't delete what does not exist */

</pre>
                                <font face="Verdana, Arial, Helvetica, sans-serif" size="2">should 
                                be changed to</font> <font face="Courier New, Courier, mono" size="2">return 
                                true; </font> 
                              </ul>
                              <p><a name="srnin"></a></p>
                              <p> 
                              <ul>
                                <li><b><font face="Verdana, Arial, Helvetica, sans-serif" size="2">string 
                                  replace, if no matches found, is not returning 
                                  the initial string <br>
                                  </font></b><font face="Verdana, Arial, Helvetica, sans-serif" size="2">(for 
                                  ISDK/Java 5.00e) </font><b><font face="Verdana, Arial, Helvetica, sans-serif" size="2"> 
                                  </font></b></li>
                                <p> <font face="Verdana, Arial, Helvetica, sans-serif" size="2">Bug: 
                                  If String.prototype.replace() is called and 
                                  no replacement is made, then the original string 
                                  should be returned. </font></p>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix:</b> 
                                  In COM/Nombas/jse/libraries/ECMAString.jsrc, 
                                  function string_which_search_helper(), at about 
                                  line 1116 is a comment "...could be no match..." 
                                  After the seAssignConvert() call just below 
                                  that comment this function should return. With 
                                  the return statement that block becomes: </font></p>
                                <pre>   /* could be no match, if replace, return the string from thisVar */
   if( se.seGetType(SE.RETURN,SE.VALUE) == SE.TYPE_NULL &&
       mode == SE_REPLACE_MODE )
   {
      se.seAssignConvert(SE.RETURN,SE.VALUE,SE.THIS,SE.VALUE,SE.TOSTRING);
      return;
   }</pre>
                              </ul>
                              <hr width="90%">
                              <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b>for 
                                5.00d --</b></font> <font face="Verdana, Arial, Helvetica, sans-serif" size="2">(may 
                                apply to earlier version)</font></p>
                              <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a name="cfrfl"></a></font></p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b><font face="Verdana, Arial, Helvetica, sans-serif" size="2">seCreateFiber 
                                  reinitializes function libraries</font></b><br>
                                  (for ISDK/Java 5.00d) </font></li>
                              </ul>
                              <blockquote> 
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"> 
                                  Problem: seCreateFiber is reinitializing the 
                                  function libraries, when they should be shared. 
                                  Because it reinitialized them in the same global, 
                                  it just overwrote the existing libraries resulting 
                                  in a performance decrease to 'redo' already-done 
                                  work.</font></p>
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b>Fix</b>: 
                                  in COM/Nombas/jse/Isdk/Call.jsrc, the function 
                                  seCreateFiber, find this line at about 5791:</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   call.CallSettings = SE.EXIT_LEVEL|SE.NEW_DEFINES|SE.NO_INHERIT;</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">and 
                                  replace with this:</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   call.CallSettings = SE.EXIT_LEVEL|SE.NEW_DEFINES|SE.NO_INHERIT|SE.NO_LIBRARIES;</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"> 
                                  and in src/core/call.c, function callDelete(), 
                                  at at about line 1906, replace this block:</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   if( (((call.CallSettings & SE.NO_INHERIT) != 0) &&
        ((call.CallSettings & SE.NO_LIBRARIES) == 0)) ||
       call.prev == null )</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">with 
                                  this</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   </font>if( (((call.CallSettings & SE.NO_INHERIT) != 0) &&
        ((call.CallSettings & SE.NO_LIBRARIES) == 0)) ||
       (call.prev == null
#      if JSE_TASK_SCHEDULER==1
       && fiberSibling==null
#      endif
        ) )</pre>
                              </blockquote>
                              <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a name="eldv"></a></font></p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Errors 
                                  with extremely large Date values</font></b><br>
                                  (for ISDK/Java 5.00d) </font></li>
                              </ul>
                              <blockquote> 
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"> 
                                  Problem: Date values larger than the maximum 
                                  allowable to new Date() can cause nearly-infinite 
                                  loops.</font></p>
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b>Fix</b>: 
                                  In COM/Nombas/jse/Isdk/SEDate.jsrc, method do_date_construction(), 
                                  near line 895 find this block:</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   else
   {
      value = se.seGetNumber(SE.ARGS,SE.INDEX(0));
   }</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">and 
                                  replace with this:</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   else
   {
      value = se.seGetNumber(SE.ARGS,SE.INDEX(0));
      value = TimeClip(value);
   }</font></pre>
                              </blockquote>
                              <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a name="vsgax"></a></font></p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>virtual-stack 
                                  growth if retrieving values after an exception</b><br>
                                  (for ISDK/Java 5.00d) </font></li>
                              </ul>
                              <blockquote> 
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"> 
                                  Problem: If an exception is generated during 
                                  a call to the SE API, items may be left on the 
                                  script stack. This is not likely to cause a 
                                  problem in a run-time system, but in debug mode 
                                  will cause the SE_API_RETURN() macro to emit 
                                  a &quot;stack growth&quot; assertion.</font></p>
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b>Fix</b>: 
                                  In COM/Nombas/jse/Isdk/_SEVar.jh, in the macros 
                                  for SEVAR_DEREFERENCE, are two lines (lines 
                                  399 419) like this::</font></p>
                                <p></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   if( !CALL_QUIT(c) ) STACK_POP(c);                 \</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">in 
                                  both cases the CALL_QUIT() test should be removed, 
                                  so they both become:</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   STACK_POP(c);                                     \</font></pre>
                              </blockquote>
                              <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a name="dgnhp"></a></font></p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>dynamic 
                                  get is not being called if SEHasPropCallback 
                                  not implemented</b><br>
                                  (for ISDK/Java 5.00d) </font></li>
                              </ul>
                              <blockquote> 
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"> 
                                  Problem: If an object has dynamic callbacks 
                                  via seSetCallbacks, but does not implement a 
                                  hasProp callback, then the get callback should 
                                  be called to determine if the object has the 
                                  given property. This is not happening in 5.00d.</font></p>
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b>Fix</b>: 
                                  in src/core/varutil.c, the function seobjHasProperty, 
                                  near the top (at about line 1296) is:</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   if( SEOBJ_IS_DYNAMIC_PROP(call,this,SEHasPropCallback) )</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">replace 
                                  with:</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   if( SEOBJ_IS_DYNAMIC_PROP(call,this,SEHasPropCallback)
       || SEOBJ_IS_DYNAMIC_PROP(call,this,SEGetCallback) )</font></pre>
                                <p><font face="Courier New, Courier, mono" size="2"> 
                                  <font face="Verdana, Arial, Helvetica, sans-serif">and 
                                  then a few lines down (at about line 1305) immediately 
                                  after this comment:</font></font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   /* Make sure that we initialize it in case GC happens */</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"> 
                                  add these lines: </font><font face="Georgia, Times New Roman, Times, serif" size="2"> 
                                  </font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   if ( !SEOBJ_IS_DYNAMIC_PROP(call,this,SEHasPropCallback) )
   {
      handled = false;
   }</font></pre>
                              </blockquote>
                              <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a name="ssres"></a></font></p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><font face="Verdana, Arial, Helvetica, sans-serif" size="2">string.split() 
                                  incorrect if regular expression used as separator</font></font></b></font></font></font><br>
                                  (for ISDK/Java 5.00d) </font></li>
                              </ul>
                              <blockquote> 
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"> 
                                  Bug: String.prototype.split(separator) returns 
                                  the wrong results when separator is a regular 
                                  expression and does not match the first character 
                                  of the string.</font></p>
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b>Fix</b>: 
                                  In COM/Nombas/jse/Isdk/ECMAString.jsrc, function 
                                  Ecma_String_split(), at about line 498(just 
                                  after the second call to SplitMatch) this statement:</font></p>
                                <p></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   if( z!=null );</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">should 
                                  be changed to:</font></p>
                                <pre>   if( z!=null && ((R==null) || se.seGetLong(z,SE.STOCK(JseStrID.index))==0) )</pre>
                              </blockquote>
                              <p> <a name="sdisee"></a></p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>seDestroyContext 
                                  cannot be called within seEva</b></font><b>l</b><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><br>
                                  (for ISDK/Java 5.00d) </font></li>
                              </ul>
                              <blockquote> 
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"> 
                                  Problem: seDestroyContext was written with the 
                                  assumption that no seEvals would be currently 
                                  executing inside it when called. Since people 
                                  want to be able to just abort and cleanup the 
                                  context, the function has been changed to support 
                                  this.</font></p>
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b>Fix</b>: 
                                  COM/Nombas/jse/Isdk/Call.jsrc, replace the existing 
                                  seDestroyContext with this new version:</font></p>
                                <p></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   public void seDestroyContext()
   {
      SE_CALL call;
      boolean again;

      do
      {
         call = CALL_FROM_JSECONTEXT(this);
         assert_is_context(call);
         again = (call.prev != null);
         Call.delete(call);
      }
      while( again );
   }</font></pre>
                              </blockquote>
                              <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a name="cenf"></a></font></p>
                              <ul>
                                <li><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b><font face="Verdana, Arial, Helvetica, sans-serif" size="2">crash 
                                  with eval() in nested function</font></b><br>
                                  (for ISDK/Java 5.00d) </font></li>
                              </ul>
                              <blockquote> 
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"> 
                                  Bug: Crash in eval() inside nested function 
                                  calls. This bug applies to any wrapper function 
                                  trying to call seEval().</font></p>
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b>Fix</b>: 
                                  COM/Nombas/jse/Isdk/Call.jsrc, function createVariableObject(), 
                                  at about line 1661 find:</font></p>
                                <p></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   while( !FUNCTION_IS_LOCAL(func_orig) \
       || (lookfunc!=null && lookfunc!=func_orig) || depth-->0 )
   {</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">and 
                                  replace with</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   while( !FUNCTION_IS_LOCAL(func_orig) \
       || (lookfunc!=null && lookfunc!=func_orig) || depth>0 )
   {
      if( depth ) depth--;</font></pre>
                              </blockquote>
                              <p><br>
                                <font face="Courier New, Courier, mono" size="2"><a name="sicse"></a></font></p>
                              <ul>
                                <li><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>STACK_INFO 
                                  crashes within nested seEval()</b></font><br>
                                  (for ISDK/Java 5.00d) </font></li>
                              </ul>
                              <blockquote> 
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"> 
                                  Problem: Using STACK_INFO within nested interprets 
                                  can crash.</font></p>
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b>Fix</b>: 
                                  COM/Nombas/jse/Isdk/Call.jsrc in the seGetMember 
                                  function, find this block at about line 1214:</font></p>
                                <p></p>
                                <pre> <font face="Courier New, Courier, mono" size="2">  save = init_call.save;

   </font><font face="Courier New, Courier, mono" size="2">in_prev_call:
      while(true)
      {</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">and 
                                  change it to:</font></p>
                                <p></p>
                                <pre>   <font face="Courier New, Courier, mono" size="2">in_prev_call:
      while(true)
      {
         save = scall.save;</font><font face="Courier New, Courier, mono" size="2">      </font></pre>
                              </blockquote>
                              <pre><font face="Courier New, Courier, mono" size="2">
<a name="stosf"></a>     </font></pre>
                              <ul>
                                <li><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b>stock 
                                  objects passed to seEval with SE.FUNC will not 
                                  work</b><br>
                                  (for ISDK/Java 5.00d) </font></li>
                              </ul>
                              <blockquote> 
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"> 
                                  Bug: When calling seEval() with stock objects 
                                  and the SE.FUNC flag (e.g. seEval(...,SE.THIS,...,SE.FUNC,...)) 
                                  the stock object will not be recognized. This 
                                  is most likely to show up when the object is 
                                  SE.NOWHERE as a result of an invalid call to 
                                  seGetObject().</font></p>
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b>Fix</b>: 
                                  In COM/Nombas/jse/Isdk/Call.jsrc, method seEvalFunc(), 
                                  add this to the local variable declarations 
                                  at the top</font></p>
                                <pre>   <font face="Courier New, Courier, mono"><font face="Courier New, Courier, mono" size="2">SE_OBJECT realobj = seobjectTohSEObject(func_obj);</font></font></pre>
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif">and 
                                  about 20 lines further down in the same function, 
                                  just before the statement &quot;<font face="Courier New, Courier, mono">pushes&nbsp;+=&nbsp;2;</font>&quot;, 
                                  replace this line:</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   SEVAR_INIT_OBJECT(func_var,func_obj.obj);</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"> 
                                  with this:</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   SEVAR_INIT_OBJECT(func_var,realobj);</font></pre>
                              </blockquote>
                              <pre><font face="Courier New, Courier, mono" size="2">                                 </font></pre>
                              <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a name="gtyp"></a></font></p>
                              <ul>
                                <li><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b>assert() 
                                  or memory leak from seEval(...SE_FUNC..) if 
                                  run-time error in script function</b><br>
                                  (for ISDK/Java 5.00d) </font></li>
                              </ul>
                              <blockquote> 
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"> 
                                  Problem: When using seEval() to call a function, 
                                  errors in the function could trigger assertions. 
                                  In release builds, this would result in a slight 
                                  memory leak.</font></p>
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b>Fix</b>: 
                                  In COM/Nombas/jse/Isdk/Call.jsrc, function callFunctionFully(), 
                                  at about line 2700, replace this line</font><font size="2" face="Verdana, Arial, Helvetica, sans-serif">:</font></p>
                                <pre><font face="Courier New, Courier, mono">   <font size="2">if( !callMayIContinue(this) )</font></font></pre>
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif">with 
                                  this:</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   if( !CALL_ERROR(this) && !callMayIContinue(this) )</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"> 
                                  and 5 lines further down remove the following 
                                  3 statements:</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">      _SEVar ret = STACK_PUSH(this);
      SEVAR_INIT_UNDEFINED(ret);
      this.error(TextCore.MAYICONTINUE);</font></pre>
                              </blockquote>
                              <pre><font face="Courier New, Courier, mono" size="2">                                 </font><font face="Courier New, Courier, mono" size="2">                            <br><a name="ngfnw"></a></font></pre>
                              <ul>
                                <li><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b>SE_NEW_GLOBALS 
                                  flag for seEval() doesn't work</b><br>
                                  (for ISDK/Java 5.00d) </font></li>
                              </ul>
                              <blockquote> 
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"> 
                                  Problem: Specifying a new global in calls to 
                                  seEval using the seEval parameters structure 
                                  can fail to take effect.</font></p>
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b>Fix</b>: 
                                  COM/Nombas/jse/Isdk/Call.jsrc, function seEval(), 
                                  at about line 9933, replace this line</font><font size="2" face="Verdana, Arial, Helvetica, sans-serif">:</font></p>
                                <pre><font face="Courier New, Courier, mono">   HowToInterpret &= ~SE.NEW_GLOBALS<font size="2">;</font></font></pre>
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif">with 
                                  this:</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   settings &= ~SE.NEW_GLOBALS</font></pre>
                              </blockquote>
                              <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a name="fpan"></a></font></p>
                              <ul>
                                <li><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b>Function.prototype.apply() 
                                  not accepting null for thisObj parameter</b><br>
                                  (for ISDK/Java 5.00d) </font></li>
                              </ul>
                              <blockquote> 
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"> 
                                  Problem: Function.prototype.apply() should accept 
                                  null or undefined as the first parameter, using 
                                  the global object for these cases. Instead an 
                                  error message is generated.</font></p>
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b>Fix</b>: 
                                  In COM/Nombas/jse/libraries/ECMAObject.jsrc, 
                                  function Ecma_Function_apply, </font><font size="2" face="Verdana, Arial, Helvetica, sans-serif"> 
                                  at about line 468replace this conditional:</font></p>
                                <pre><font face="Courier New, Courier, mono">   if( argc &gt; 0 )</font></pre>
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif">with 
                                  this:</font></p>
                                <pre><font face="Courier New, Courier, mono">   if( argc &gt; 0
    && SE.TYPE_NULL < se.seGetType(SE.ARGS,SE.INDEX(0)) )</font></pre>
                              </blockquote>
                              <pre><font face="Courier New, Courier, mono" size="2">
<a name="evfx"></a>                                 </font></pre>
                              <p> 
                              <ul>
                                <li><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b>seEval(...SE_FUNC...) 
                                  does not generate exception if object is not 
                                  a function</b><br>
                                  (for ISDK/Java 5.00d) </font></li>
                              </ul>
                              <blockquote> 
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"> 
                                  Problem: Calling seEval() with a function (the 
                                  SE.FUNC flag) will return false but will not 
                                  generate an exception and will not call the 
                                  seAttErrorFunc or sePrintErrorFunc. Instead, 
                                  this will call the internal API function. In 
                                  other words, calling seEval() with an invalid 
                                  function object is viewed as an API error instead 
                                  of a scripting error.</font></p>
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b>Fix</b>: 
                                  The underlying API philosophy is the seEval() 
                                  should behave much like the script eval() function, 
                                  and so using a non-function object as an API 
                                  error is wrong. In COM/Nombas/jse/Isdk/Call.jsrc 
                                  function seEvalFunc(), at about line 9367 changine 
                                  this line: </font></p>
                                <pre><font size="2" face="Courier New, Courier, mono">   this.seAPIError("Object passed as a function to seEval is not really a function.");</font></pre>
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif">to 
                                  this</font></p>
                                <pre><font size="2" face="Courier New, Courier, mono">   this.quit(TextCore.NOT_FUNCTION_VARIABLE,"");</font><font face="Courier New, Courier, mono" size="2">                           </font></pre>
                              </blockquote>
                              <!-- #EndEditable --></td>
                    </tr>
                    <tr>
                      <td width="1">&nbsp;</td>
                      <td width="460">&nbsp;</td>
                    </tr>
                  </table>
                  </TD>
              </TR>
            </TABLE>
          </TD>
        </TR>
      </TABLE>
    </TD>
  </TR>
  <TR VALIGN=TOP ALIGN=LEFT>
    <TD HEIGHT=2 width="5"></TD>
    <TD COLSPAN=2 height="2">
            <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=100% HEIGHT=20 bgcolor="#FFFFFF">
              <TR ALIGN=LEFT VALIGN=TOP>
          <TD>
                  <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=100%>
                    <TR VALIGN=TOP ALIGN=LEFT>
                <TD WIDTH=20 HEIGHT=2 ALIGN=LEFT VALIGN=TOP><IMG ID="Picture13" HEIGHT=20 WIDTH=20 SRC="../../../curve_botleft.gif" BORDER=0></TD>
                      <TD height="2"><IMG SRC="../../../clearpixel.gif" WIDTH=592 HEIGHT=1 BORDER=0></TD>
                <TD WIDTH=20 ALIGN=LEFT VALIGN=TOP height="2"><IMG ID="Picture11" HEIGHT=20 WIDTH=20 SRC="../../../curve_bot.gif" BORDER=0></TD>
              </TR>
            </TABLE>
          </TD>
        </TR>
      </TABLE>
    </TD>
  </TR>
  <TR VALIGN=TOP ALIGN=LEFT>
    <TD WIDTH=5 HEIGHT=6><IMG SRC="../../../clearpixel.gif" WIDTH=5 HEIGHT=1 BORDER=0></TD>
    <TD WIDTH=613><IMG SRC="../../../clearpixel.gif" WIDTH=613 HEIGHT=1 BORDER=0></TD>
    <TD WIDTH=22><IMG SRC="../../../clearpixel.gif" WIDTH=19 HEIGHT=1 BORDER=0></TD>
  </TR>
  <TR VALIGN=TOP ALIGN=LEFT>
    <TD COLSPAN=2>
            <P ALIGN=RIGHT><A HREF="../../../index.htm"><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">Home</FONT></A><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">
              | </FONT><A
                 HREF="../../../scripting/scripting.htm"><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">Scripting</FONT></A><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">
              | </FONT><A
                 HREF="../../../products/products.htm"><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">Products</FONT></A><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">
              | </FONT><A
                 HREF="../../../purchase/purchase.htm"><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">Purchase</FONT></A><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">
              | </FONT><A
                 HREF="../../../download/ndownload.htm"><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">Download</FONT></A><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">
              | </FONT><A
                 target="support" HREF="http://support.nombas.com/"><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">Support</FONT></A><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">
              | </FONT><A HREF="../../../company/company.htm"> <FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">Company</FONT></A><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica"><BR>
        <BR>
        Copyright &#169;2001, Nombas, Inc. All Rights Reserved.<BR>
        Questions? Visit </FONT><A HREF="http://support.nombas.com/"><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">http://support.nombas.com/</FONT></A>
    </TD>
    <TD width="22"></TD>
  </TR>
</TABLE>
</td>
  </tr>
</table>
<SCRIPT language=JavaScript1.2>
  display_nombas_legacy_message();
</SCRIPT>
</BODY>
<!-- #EndTemplate --></HTML>
