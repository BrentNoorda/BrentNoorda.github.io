<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 FINAL//EN">
<HTML><!-- #BeginTemplate "/us/Templates/erratapage.dwt" -->
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<TITLE>ScriptEase ISDK DevSpace</TITLE>
<!-- begin metaTags -->
<META NAME="keywords" CONTENT="javascript,ecmascript,ecma,scriptease,jscript,scripting,nombas,isdk,sedesk,web application development,embedded devices,distributed computing,peer-to-peer,p2p,peer,data mining,javascript.com,cycletraders,integrated sdk,script ease,java,c++,c,simplicity,power,palm,windows ce,integration: sdk,integration:sdk,scriptease:desktop,scriptease: desktop,se:desktop,se:desk,se:isdk, se: isdk,development tools,devtools">
<META HTTP-EQUIV="DESCRIPTION" CONTENT="Nombas delivers simplicity and power through scripting by providing market-leading development tools and software for JavaScript and ECMAScript.">
<!-- end metaTags -->
<!-- begin navbar includes -->
<SCRIPT language=JavaScript1.2>
  navbarPath = '../../../';
</SCRIPT>
<SCRIPT language=JavaScript1.2 SRC="../../../navbarData.js"></SCRIPT>
<SCRIPT language=JavaScript1.2 SRC="../../../navbarMenu.js"></SCRIPT>
<SCRIPT language=JavaScript SRC="../../../imgRollover.js"></SCRIPT>
<!-- end navbar includes -->
<!-- begin style and icon definition -->
<LINK REL="SHORTCUT ICON" HREF="../../../nombas.ico">
<STYLE>
A:hover { color:#941810;}
</STYLE>
<!-- end style and icon definition -->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-1754630-10']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
</HEAD>
<BODY BGCOLOR="#06086F" LINK="#0000FF" VLINK="#800080" TEXT="#000000" TOPMARGIN=0 LEFTMARGIN=0 MARGINWIDTH=0 MARGINHEIGHT=0>
<table width="632" border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td>
<TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=213>
  <TR VALIGN=TOP ALIGN=LEFT>
    <TD WIDTH=28 HEIGHT=4><IMG SRC="../../../clearpixel.gif" WIDTH=28 HEIGHT=1 BORDER=0></TD>
    <TD></TD>
  </TR>
  <TR VALIGN=TOP ALIGN=LEFT>
    <TD HEIGHT=60></TD>
          <TD WIDTH=185 ALIGN=LEFT VALIGN=TOP><A HREF="../../../index.htm"><IMG ID="Picture1" HEIGHT=60 WIDTH=185 SRC="../../../logo.gif" BORDER=0 alt="Nombas Homepage"></A></TD>
  </TR>
</TABLE>
    <div id="nombas-legacy"></div>
<TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0>
  <TR VALIGN=TOP ALIGN=LEFT>
    <TD WIDTH=30 HEIGHT=10><IMG SRC="../../../clearpixel.gif" WIDTH=30 HEIGHT=1 BORDER=0></TD>
    <TD></TD>
  </TR>
  <TR VALIGN=TOP ALIGN=LEFT>
    <TD></TD>
    <TD WIDTH=582>
      <TABLE ID="Table1" BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=582>
        <TR>
          <TD WIDTH=97>
                  <P><A HREF="../../../scripting/scripting.htm"
                            onmouseover="changeImages('scripting', '../../../htab_scripting.gif'); popUp('elMenu1',event); return true;"
onmouseout="changeImages('scripting', '../../../tab_scripting.gif'); popDown('elMenu1'); return true;"
><IMG
                             ID="scripting" HEIGHT=21 WIDTH=97 SRC="../../../tab_scripting.gif" VSPACE=0 HSPACE=0 ALIGN="TOP" BORDER=0 name="scripting" alt="Scripting"></A>
                </TD>
          <TD WIDTH=97>
                  <P><A HREF="../../../products/products.htm"
                            onmouseover="changeImages('products', '../../../htab_products.gif'); popUp('elMenu2',event); return true;"
onmouseout="changeImages('products', '../../../tab_products.gif'); popDown('elMenu2'); return true;"><IMG ID="products"
                             HEIGHT=21 WIDTH=97 SRC="../../../tab_products.gif" VSPACE=0 HSPACE=0 ALIGN="TOP" BORDER=0 name=products alt="Products"></A>
                </TD>
          <TD WIDTH=97>
                  <P><A HREF="../../../purchase/purchase.htm" onmouseover="changeImages('purchase', '../../../htab_purchase.gif');return true;"
onmouseout="changeImages('purchase', '../../../tab_purchase.gif');return true;"><IMG ID="purchase"
                             HEIGHT=21 WIDTH=97 SRC="../../../tab_purchase.gif" VSPACE=0 HSPACE=0 ALIGN="TOP" BORDER=0 name=purchase alt="Purchase"></A>
                </TD>
          <TD WIDTH=97>
                  <P><A HREF="../../../download/ndownload.htm" onmouseover="changeImages('download', '../../../htab_download.gif');return true;"
onmouseout="changeImages('download', '../../../tab_download.gif');return true;"><IMG ID="download"
                             HEIGHT=21 WIDTH=97 SRC="../../../tab_download.gif" VSPACE=0 HSPACE=0 ALIGN="TOP" BORDER=0 name=download alt="Download"></A>
                </TD>
          <TD WIDTH=97>
                  <P><A target="support" HREF="http://support.nombas.com/" onmouseover="changeImages('support', '../../../htab_support.gif'); return true;"
onmouseout="changeImages('support', '../../../tab_support.gif'); return true;"><IMG ID="support"
                             HEIGHT=21 WIDTH=97 SRC="../../../tab_support.gif" VSPACE=0 HSPACE=0 ALIGN="TOP" BORDER=0 name=support alt="Support"></A>
                </TD>
          <TD WIDTH=97>
                  <P><A HREF="../../../company/company.htm"
                            onmouseover="changeImages('company', '../../../htab_company.gif'); popUp('elMenu6',event); return true;"
onmouseout="changeImages('company', '../../../tab_company.gif'); popDown('elMenu6'); return true;"><IMG ID="company"
                             HEIGHT=21 WIDTH=97 SRC="../../../tab_company.gif" VSPACE=0 HSPACE=0 ALIGN="TOP" BORDER=0 name=company alt="Company"></A>
                </TD>
        </TR>
      </TABLE>
    </TD>
  </TR>
</TABLE>
      <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=100%>
        <TR VALIGN=TOP ALIGN=LEFT>
    <TD WIDTH=5 HEIGHT=20><IMG SRC="../../../clearpixel.gif" WIDTH=5 HEIGHT=1 BORDER=0></TD>
          <TD>
            <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=100% HEIGHT=20 bgcolor="#FFFFFF">
              <TR ALIGN=LEFT VALIGN=TOP>
          <TD>
                  <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=100%>
                    <TR VALIGN=TOP ALIGN=LEFT>
                <TD WIDTH=20 HEIGHT=20 ALIGN=LEFT VALIGN=TOP><IMG ID="Picture12" HEIGHT=20 WIDTH=20 SRC="../../../curve_topleft.gif" BORDER=0></TD>
                      <TD><IMG SRC="../../../clearpixel.gif" WIDTH=592 HEIGHT=1 BORDER=0></TD>
                <TD WIDTH=20 ALIGN=LEFT VALIGN=TOP><IMG ID="Picture10" HEIGHT=20 WIDTH=20 SRC="../../../curve_top.gif" BORDER=0></TD>
              </TR>
            </TABLE>
          </TD>
        </TR>
      </TABLE>
    </TD>
  </TR>
</TABLE>
<TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=637>
  <TR VALIGN=TOP ALIGN=LEFT>
    <TD HEIGHT=471 width="5"></TD>
    <TD COLSPAN=2 height="471">
      <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=632 HEIGHT=200 bgcolor="#FFFFFF">
        <TR ALIGN=LEFT VALIGN=TOP>
          <TD height="471">
            <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=516>
              <TR VALIGN=TOP ALIGN=LEFT>
                <TD WIDTH=14 HEIGHT=1><IMG SRC="../../../clearpixel.gif" WIDTH=13 HEIGHT=1 BORDER=0></TD>
                <TD WIDTH=502><IMG SRC="../../../clearpixel.gif" WIDTH=316 HEIGHT=1 BORDER=0></TD>
              </TR>
              <TR VALIGN=TOP ALIGN=LEFT>
                <TD width="14"></TD>
                <TD WIDTH=502><!-- #BeginEditable "hier" -->
                        <P ALIGN=LEFT><A HREF="../../../index.htm"><FONT SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">Nombas</FONT></A><FONT SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">
                          &gt; <a HREF="../../index.htm">SE:ISDK DevSpace</a>
                          &gt; <a href="../index.htm">Errata</a> &gt; Java Integration
                          SDK 4.30x Errata</FONT>
                        <!-- #EndEditable --></TD>
              </TR>
            </TABLE>
            <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=300>
              <TR VALIGN=TOP ALIGN=LEFT>
                <TD WIDTH=15 HEIGHT=5><IMG SRC="../../../clearpixel.gif" WIDTH=15 HEIGHT=1 BORDER=0></TD>
                <TD></TD>
              </TR>
              <TR VALIGN=TOP ALIGN=LEFT>
                <TD HEIGHT=80></TD>
                <TD WIDTH=600 ALIGN=LEFT VALIGN=TOP><IMG ID="Picture14" HEIGHT=80 WIDTH=600 SRC="../../bnr_devspace.gif" BORDER=0></TD>
              </TR>
              <TR VALIGN=TOP ALIGN=LEFT>
                <TD HEIGHT=368></TD>
                <TD WIDTH=600 ALIGN=LEFT VALIGN=TOP height="368">
                  <table width="100%" border="0">
                    <tr>
                      <td colspan="4" height="9"><img SRC="../../../clearpixel.gif" width="1" height="1"></td>
                    </tr>
                    <tr>
                      <td width="1" height="326">&nbsp;</td>
                      <td valign="top" height="326"><!-- #BeginEditable "main" -->
                              <p><font size="4" face="Verdana, Arial, Helvetica, sans-serif"><b>Java
                                Integration SDK 4.30x Errata</b></font><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><br>
                                <i><b>Fixes Affecting Users of the ScriptEase
                                Java ISDKs</b></i></font> </p>
                              <p>
                              <p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#v430e">4.30e
                                  API</a> - lastest update: February 26, 2002
                                  </font></li>
                              </ul>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#v430d">4.30d
                                  API</a> - latest update: October 4, 2001</font>
                                </li>
                              </ul>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#v430a">4.30a
                                  API</a> - latest update: April 30, 2001</font>
                              </ul>
                              <hr width="80%" align="left" size="1" noshade>
                              <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a name="v430e"></a><br>
                                </font><font face="Verdana, Arial, Helvetica, sans-serif" size="2">API
                                Errata, version <b>4.30e</b> (may apply to earlier
                                versions) <br>
                                &nbsp;&nbsp;<b>New</b>, February 26, 2002</font>
                              </p>
                              <p>
                              <font face="Verdana, Arial, Helvetica, sans-serif" size="2">
                              <ul>
                                <li><a href="#430estrrepzero">String replace may
                                  skip matches if replacement string is null-string
                                  (i.e. "")</a></li>
                                <li><a href="#430eparseintzero">parseInt("0")
                                  throws exception</a></li>
                                <li><a href="#430emathround">Math.round() returns
                                  -0 instead of +0 from -0.5 to -0</a></li>
                                <li><a href="#430emathmin">Math.min(+0,-0) wrongly
                                  returns +0</a></li>
                                <li><a href="#430enegmonth">Invalid date computation
                                  on negative month</a></li>
                                <li><a href="#430eerroroverflow">Stack overflow
                                  if reporting invalid data type while generating
                                  an error message</a></li>
                                <li><a href="#430eprefunction">Pre-compiled scripts
                                  with function calls cause NullPointerException</a></li>
                                <li><a href="#430ecompileslow">Compiling large
                                  scripts slow</a></li>
                                <li><a href="#430ememory">Excessive memory usage
                                  while interpreting a script</a></li>
                                <li><a href="#430estackoverwrite"> stack variable
                                  overwrite when mayIContinue() method returns
                                  false</a></li>
                                <li><a href="#430etryterm">terminating execution
                                  from within a "try" block can cause memory leaks</a></li>
                                <li><a href="#430eregexpclass">RegExp.prototype._class
                                  wrong</a></li>
                              </ul>
                              <br>
                              <a name="v430d"></a><br>
                              API Errata, version <b>4.30d</b> (may apply to earlier
                              versions) <br>
                              &nbsp;&nbsp;<b>New</b>, October 4, 2001</font>
                              <p></p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#430dwronghint">Object
                                  comparisons with wrong hint - Date comparisons
                                  fail</a> </font></li>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#430dtonumber">ToNumber()
                                  returns incorrect values for "+" and "-"</a></font></li>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#430dzerotostring">toString(radix)
                                  not returing correct value for 0</a></font></li>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#430dfuncconcat">toString
                                  on functions concatenates some indentifiers</a></font></li>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#430dpropthis">eval
                                  does not propogate the "this" of its caller</a></font></li>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#430darrayinit">static
                                  Array initializer is not instanceof Object</a></font></li>
                                <li><a href="#430dobjinit"><font face="Verdana, Arial, Helvetica, sans-serif" size="2">empty
                                  Object initializer creates an Array object;
                                  should be an Object object</font></a></li>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#430dcontinueswitch">"continue"
                                  within "switch" statement jumps to wrong condition</a></font></li>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#430dfloatwrite">Floating
                                  point numbers not written correctly in jseCreateCodeTokenBuffer</a>
                                  </font>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#430dfloatread">Floating
                                  point numbers not read correctly when interpreting
                                  from token buffer</a> </font>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#430derratic">Scripts
                                  interpreted from a token buffer may display
                                  erratic behavior</a> </font>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#430dcharread">Some
                                  characters not read correctly when interpreting
                                  from a token buffer</a><br>
                                  <br>
                                  </font>
                              </ul>
                              <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a name="v430a"></a><br>
                                API Errata, version <b>4.30a</b> (may apply to
                                earlier versions) <br>
                                &nbsp;&nbsp;<b>New</b>, August 30, 2001</font></p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#430acontinue">Continue
                                  statement in do/while skips while</a> </font></li>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#se430apop">Variables
                                  not being popped off of the stack properly </a></font></li>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#se430asubtract">Error
                                  when subtracting C-Strings</a></font></li>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#430ashared">jseSetSharedData()
                                  not adding data correctly</a></font></li>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#430acallstack">NullPointer
                                  exception when using jseCallStackInfo()</a></font></li>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#430aback">Error
                                  when moving backwards in C-string</a> </font></li>
                              </ul>
                              <hr width="80%" align="left" size="1" noshade>
                              <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b><font size="3">The
                                Details</font></b> </font></p>
                              <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>for
                                4.30e --</b></font></p>
                              <p><a name="430estrrepzero"></a>
                              <p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>String
                                  replace may skip matches if replacement string
                                  is null-string (i.e. "")</b><br>
                                  (for ISDK/Java 4.30e)<br>
                                  <br>
                                  Bug: If the replacement expression in a string
                                  replace() method is the zero-length string,
                                  then characters may be skipped in performing
                                  the replacement. For example, this script would
                                  fail the test: </font></li>
                                <pre>   var str = '6 abcdef';
   var rtn = str.replace(/[^0-9\.]/g,'');
   Test.assert( rtn == "6" ); // in error would be "6acf"</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix</b>:
                                  In srclib/ecma/ECMAlib.jsrc, function string_search_helper(),
                                  replace the block of code beginning with "/
                                  * The return from exec should be an object"
                                  with the code found at <a href="%20ftp://ftp.nombas.com/pub/isdkeval/se430/%20string_search_helper.txt">ftp://ftp.nombas.com/pub/isdkeval/se430/jstring_search_helper.txt</a>
                                  </font> </p>
                              </ul>
                              <p><a name="430eparseintzero"></a></p>
                              <p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>parseInt("0")
                                  throws exception</b><br>
                                  (for ISDK/Java 4.30e)<br>
                                  </font></li>
                                <font face="Verdana, Arial, Helvetica, sans-serif" size="2"><br>
                                Bug: Calling parseInt("0") results in the engine
                                throwing an IndexOutOfBounds exception<br>
                                <br>
                                <b>Fix</b>: In ECMAlib.java around line 202 in
                                the parseInt() wrapper function, find this line:</font><br>
                                <pre>   if( 'X' == Character.toUpperCase( str.charAt(idx+1) ) )             </pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">and
                                  change it to this:</font></p>
                                <pre>   if( str.length() > 1 && 'X' == Character.toUpperCase( str.charAt(idx+1) ) )
</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">also,
                                  find this line (around line 213 in the same
                                  function):</font></p>
                                <pre>   if ( '0' == str.charAt(idx) && 'X' == Character.toUpperCase(str.charAt(idx+1)) )</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">and
                                  change it to this:</font></p>
                                <pre>   if ( '0' == str.charAt(idx) && str.length() > 1 && 'X' == Character.toUpperCase(str.charAt(idx+1)) )</pre>
                                <p>&nbsp;</p>
                                <p><a name="430emathround"></a></p>
                              </ul>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Math.round()
                                  returns -0 instead of +0 from -0.5 to -0</b><br>
                                  (for ISDK/Java 4.30e)<br>
                                  </font></li>
                                <font face="Verdana, Arial, Helvetica, sans-serif" size="2"><br>
                                Bug: Math.round(val) should return -0 for -0.5
                                <= val <= -0, according to section 15.8.2.15 of
                                the ECMAScript specification, but is returning
                                +0.<br>
                                <br>
                                <b>Fix</b>: In Libs/SEMath.java, in the Ecma_Math_round
                                wrapper function, the "if" statement and block
                                should be changed to:</font><br>
                                <pre>   if ( Jselib.jseIsFinite(val) && !Jselib.jseIsZero(val) )
   {
      double half = (jseOne/2);
      /* exception to standard math if between -0.5 and -0, inclusive */
      if (val < Jselib.jseZero && -half <= val)
         val = Jselib.jseNegZero;
      else
         val = Math.floor(val+half);
   }    </pre>
                                <p><br>
                                  <a name="430emathmin"></a> </p>
                              </ul>
                              <ul>
                              </ul>
                              <ul>
                                <li><b><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Math.min(+0,-0)
                                  wrongly returns +0</font></b><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><br>
                                  (for ISDK/Java 4.30e)<br>
                                  <br>
                                  Bug: Math.min() is not returning -0 when comparing
                                  -0 against +0.<br>
                                  <br>
                                  <b>Fix</b>: in Libs/SEMath.java, in the Ecma_Math_min
                                  wrapper function, at about line 483 change the
                                  comparison from:</font><br>
                                </li>
                                <pre>   if( current < minval )
</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">to:</font></p>
                                <pre>   if( (current < minval) || (Jselib.jseIsNegZero(current) && Jselib.jseIsZero(minval)) )
         </pre>
                                <p><a name="430enegmonth"></a><br>
                                </p>
                              </ul>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Invalid
                                  date computation on negative month</b><br>
                                  (for ISDK/Java 4.30e)<br>
                                  <br>
                                  Bug: Date calculations are incorrect if month
                                  is negative. For example, the following script
                                  should set the month to October (month 9) and
                                  year to 1980, but instead it sets the month
                                  to January (month 0) and year to 1981.</font><br>
                                  <br>
                                </li>
                                <pre>   var foo = new Date("12:00 February 4, 1982");
   foo.setUTCMonth(-15);

</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix</b>:
                                  In Libs/SEdate.java, function MakeDay(), insert
                                  code between lines 475 and 479 add code so those
                                  lines become:</font></p>
                                <pre>   r6 = m%12; <br>   if ( r6 < 0 ) <br>   { <br>      r6 += 12; <br>      r5--;<br>   } <br>   t = TimeFromYear(r5);
                       </pre>
                                <p><a name="430eerroroverflow"></a><br>
                                </p>
                              </ul>
                              <ul>
                              </ul>
                              <ul>
                                <li><b><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Stack
                                  overflow if reporting invalid data type while
                                  generating an error message</font></b><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><br>
                                  (for ISDK/Java 4.30e)<br>
                                  </font></li>
                                <p> <font face="Verdana, Arial, Helvetica, sans-serif" size="2"><br>
                                  Bug: If a method is called during error handling,
                                  and that method has a data type or conversion
                                  error, then the program will cause a stack overflow.
                                  For example, in the following example "msg"
                                  is the wrong data type and while rerporing this
                                  error the program will crash:<br>
                                  </font><br>
                                </p>
                                <pre>   function TypeError(msg)
   {
      Error.apply(this, msg);
      return this;
   }
   TypeError(null);                                </pre>
                              </ul>
                              <ul>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix</b>:
                                  In Call.jsrc, method errorVPrintf(), replace
                                  this code: (around line 2591)</font></p>
                                <pre>   if ( Global.inErrorVPrintf )
      return;</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">with
                                  this:</font></p>
                                <pre>   if ( Global.inErrorVPrintf )
   {
      SET_ERROR( FlowError );
      return;
   }</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">SET_ERROR(FlowError);</font></p>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Also
                                  in Call.jsrc, method errorVPrintf(), just before
                                  the comment that reads: </font></p>
                                <pre>   /* If possible find line number information and add that */</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">add
                                  this statement:</font></p>
                                <pre>   Global.inErrorVPrintf = true;</pre>
                                <p><a name="430eprefunction"></a></p>
                              </ul>
                              <ul>
                              </ul>
                              <p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Pre-compiled
                                  scripts with function calls cause NullPointerException</b><br>
                                  (for ISKD/Java 4.30e)</font><br>
                                </li>
                                <p> <font face="Verdana, Arial, Helvetica, sans-serif" size="2">Problem:
                                  When interpreting a pre-compiled script that
                                  makes functions calls, the engine throws a NullPointerException<br>
                                  </font><br>
                                  <font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix</b>:
                                  Around line 607 of Token.jsrc, in the readVar()
                                  method, find this block:</font></p>
                                <pre>
   byte type = readByte();
   if ( type == NEW_FUNCTION )
   {
      /* a function variable */
      localTokenRead( call, var );
   }

</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">right
                                  before the comment, insert the following line:</font></p>
                                <pre>   INIT_BLANK_OBJECT(call,var);

</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">The
                                  block should now look like this:</font></p>
                                <pre>   byte type = readByte();
   if ( type == NEW_FUNCTION )
   {

      INIT_BLANK_OBJECT(call,var);
      /* a function variable */
      localTokenRead( call, var );
   }</pre>
                                <p>&nbsp;</p>
                              </ul>
                              <p><a name="430ecompileslow"></a></p>
                              <p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Compiling
                                  large scripts slow</b><br>
                                  (for ISDK/Java 4.30e)</font></li>
                              </ul>
                              <font face="Verdana, Arial, Helvetica, sans-serif" size="2">
                              <blockquote>
                                <p>Problem: Compiling large scripts takes an extremely
                                  long time.</p>
                                <p><b>Fix</b>: Around line 153 in Loclfunc.jsrc,
                                  in the nextToken() method, find this line:</p>
                                <pre><font face="Courier New, Courier, mono" size="2">   tok_alloced += 50;</font></pre>
                              </blockquote>
                              </font><font face="Verdana, Arial, Helvetica, sans-serif" size="2">
                              <blockquote>
                                <p>and change it to</p>
                                <pre><font face="Courier New, Courier, mono" size="2">   tok_alloced *= 2;</font></pre>
                              </blockquote>
                              </font>
                              <p><a name="430ememory"></a>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Excessive
                                  memory usage while interpreting a script</b><br>
                                  (for ISDK/Java 4.30e)</font></li>
                              </ul>
                              <p>
                              <font face="Verdana, Arial, Helvetica, sans-serif" size="2">
                              <blockquote>
                                <p>Problem: While interpreting some scripts, the
                                  engine may unnecessarily use a large amount
                                  of memory.</p>
                                <p><b>Fix</b>: Around line 369 in seVar.jsrc,
                                  in the createAllocatedString() method, find
                                  this line:</p>
                                <pre><font face="Courier New, Courier, mono" size="2">   ret.data = mem;</font></pre>
                                <p>a<font face="Verdana, Arial, Helvetica, sans-serif" size="2">nd
                                  change it to this:</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   ret.data = String.copyValueOf(mem.toCharArray(), 0, len);</font></pre>
                              </blockquote>
                              <a name="430estackoverwrite"></a>
                              <p>
                              <p>
                              <p>
                              </font>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>stack
                                  variable overwrite when mayIContinue() method
                                  returns false</b> <br>
                                  (for ISDK/Java 4.30e)<br>
                                  </font>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Bug:
                                    When you mayIContinue() callback return false,
                                    a variable within the virtual machine stack
                                    may be wrongly assigned as undefined. This
                                    could lead to a variable being freed prematurely
                                    </font></p>
                                </li>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix</b>:
                                  In Call.jsrc, method jseInterpret(), at about
                                  line 3931, replace this line:</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   seVar tmp = Global.stack[ ++stackptr ];</font></pre>
                                <p><font face="Courier New, Courier, mono" size="2"></font><font face="Verdana, Arial, Helvetica, sans-serif" size="2">with
                                  this:</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   seVar tmp = ((Call)newc).Global.stack[ ++((Call)newc).stackptr ];</font><font face="Verdana, Arial, Helvetica, sans-serif" size="2"> </font></pre>
                              </ul>
                              <font face="Verdana, Arial, Helvetica, sans-serif" size="2">
                              <p><a name="430etryterm"></a></p>
                              <p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>terminating
                                  execution from within a "try" block can cause
                                  memory leaks</b><br>
                                  (for ISDK/Java 4.30e)<br>
                                  <br>
                                  Bug: If execution is terminated while a script
                                  is within a try block, such as if the mayIContinue()
                                  callback function returns False or by calling
                                  jseLibSetExitFlag(), then some allocated memory
                                  will not be released.<br>
                                  <br>
                                  <b>Fix</b>: in Call.jsrc, in method delete()
                                  of the Call class, add this line to the end
                                  of the method (just before the 'call = null;'
                                  line) at around line 3396:</font></li>
                              </ul>
                              </font>
                              <ul>
                                <pre><font face="Courier New, Courier, mono" size="2">   call.tries = null;</font></pre>
                                <p><font face="Courier New, Courier, mono" size="2"></font><font face="Verdana, Arial, Helvetica, sans-serif" size="2">and
                                  in Secode.jsrc, about 19 lines into the method
                                  handleFinally() of the Secode class, replace
                                  these lines (at about line 6365):</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   if ( call.QUIT() ) call.stackptr = call.tries.sptr;</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">with
                                  these:</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   if ( call.state == FlowError ) call.stackptr = call.tries.sptr;</font></pre>
                                <p>&nbsp; </p>
                              </ul>
                              <font face="Verdana, Arial, Helvetica, sans-serif" size="2">
                              <p><a name="430eregexpclass"></a></p>
                              <p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>RegExp.prototype._class
                                  wrong</b><br>
                                  (for ISDK/Java 4.30e)</font></li>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Bug:
                                  RegExp.prototype._class should be defined as
                                  "RegExp" but is instead defined as the number
                                  NaN. </font></p>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix</b>:
                                  In Libs/ECMAlib.java at about line 941, replace
                                  this line:</font></p>
                                <pre>   Jselib.JSE_VARSTRING( PROTOCLASS_PROPERTIES, REGEXP_PROPERTY, jseDontEnum),</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">with
                                  this:</font></p>
                                <pre>   Jselib.JSE_VARSTRING( PROTOCLASS_PROPERTIES, "\"RegExp\"", jseDontEnum),</pre>
                                <p>&nbsp;</p>
                              </ul>
                              <font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>for
                              4.30d --</b></font><br>
                              <a name="430dwronghint"><br>
                              </a><br>
                              <br>
                              <p>
                              <ul>
                                <li> <font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Object
                                  comparisons with wrong hint - Date comparisons
                                  fail<br>
                                  </b>(for ISDK/Java 4.30d)<b><br>
                                  <br>
                                  </b>Bug: Object comparison (<, <=, >, >=) are
                                  not correctly following the hint<br>
                                  logic specified in section 11.8.5 (The Abstract
                                  Relational Comparison Algorithm) of the ECMAScript
                                  specification. When objects are converted to
                                  a primitive value for comparison they should
                                  be give "hint Number". This would only show
                                  up as a problem for any object that does not
                                  have number as its default primitive; the Date
                                  object is such an example, and so the following
                                  test fails for the date object because it is
                                  comparing as a string (the default Date primitive
                                  type instead of as a Number (the hint type for
                                  comparison).</font>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix:</b>
                                    In VarUtil.jsrc, method ECMACompareLess(),
                                    change the first two instances of this code
                                    (lines 775 and 783):</font></p>
                                </li>
                                <pre>   convert(call,tmp,jseToPrimitive);</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">to:</font></p>
                                <pre>   convertToPrimitive(call,tmp,VNumber); </pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><br>
                                  </font></p>
                              </ul>
                              <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a name="430dtonumber"></a></font>
                              </p>
                              <p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>ToNumber()
                                  returns incorrect values for "+" and "-"</b></font><br>
                                  <font face="Verdana, Arial, Helvetica, sans-serif" size="2">(for
                                  ISDK/Java 4.30d)</font><br>
                                </li>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Bug:
                                  When ToNumber() is called with either "+" or
                                  "-" as its argument, the return value should
                                  be NaN. Instead, ToNumber() is returning Infinity
                                  and -Infinity, respectively.</font></p>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix:</b>
                                  In VarUtil.jsrc, method convertStringToNumber,
                                  around line 1404, change this line of code:</font></p>
                                <pre>   if ( lenParsed == lenStr ) </pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">to:</font>
                                </p>
                                <pre>   if ( lenParsed == lenStr && lenStr != 1 )

</pre>
                              </ul>
                              <p><a name="430dzerotostring"></a></p>
                              <p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>toString(radix)
                                  not returing correct value for 0<br>
                                  </b>(for ISDK/Java 4.30d)</font></li>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">The
                                  following simple script should return "0", but
                                  does is not: </font></p>
                                <pre>   var z = (0).toString(10);</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix</b>:
                                  In ECMAlib.java, at the beginning of the method
                                  EcmaNumberToStringWithRadix(), insert the following
                                  code:</font></p>
                                <pre>   if( val == 0 )
   {
      buf[0] = "0";
      return;
   }<br>
                              </pre>
                              </ul>
                              <p><a name="430dfuncconcat"></a></p>
                              <p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>toString
                                  on functions concatenates some indentifiers</b><br>
                                  (for ISDK/Java 4.30d)</font></li>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Bug:
                                  When a function is being converted to a string,
                                  a required space may not be displayed after
                                  some variables. For example, this code:</font></p>
                                <pre>   function blah()
   {
      for (var prop in obj);
   }
   display("" + blah);

</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">may
                                  produce this output (note that "prop" and "in"
                                  have become concatenated):</font></p>
                                <pre>   function blah()
   {
      for (var propin obj);
   }
                </pre>
                                <p><b><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Fix:</font></b><font face="Verdana, Arial, Helvetica, sans-serif" size="2">
                                  Many changes are required to fix this and related
                                  problems. Upgrade to 4.30.</font><br>
                                </p>
                              </ul>
                              <p><a name="430dpropthis"></a></p>
                              <p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>eval
                                  does not propogate the "this" of its caller</b><br>
                                  (for ISDK/Java 4.30d)</font></li>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Problem:
                                  eval() does not propogate the 'this' of its
                                  caller. </font></p>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix:</b>
                                  In ECMAlib.java, in the method eval(), change
                                  the reference to JSE_INTERPRET_KEEPTHIS in the
                                  call to jseInterpret() to JSE_INTERPRET_PARENTTHIS.</font></p>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">In
                                  JseInterpretMethod.jsrc, add these lines:</font></p>
                                <pre>/* Use the 'this' variable from the calling function */
public static final int JSE_INTERPRET_PARENTTHIS = 0x100;</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">In
                                  Call.jsrc, near line 3122, there is a call to
                                  RunCompiledCode(), change it to this:</font></p>
                                <pre>   {
      seObject this_obj = null;<br>   <br>      if ( (HowToInterpret&JSE_INTERPRET_KEEPTHIS)!=0 &&
            frameptr != -1 )
      {     <br>         this_obj = GET_OBJECT(Global.stack[frameptr-(THIS_OFFSET+num_args)]);
      }<br>      if ( this_obj==null &&
           (HowToInterpret&JSE_INTERPRET_PARENTTHIS)!=0 )
      {
         if( frameptr!=-1 )
         {
            int old_frame;
            int old_num_args;
      <br>            old_num_args = GET_STORAGE_LONG(OLD_ARGS(this));
            old_frame = GET_STORAGE_LONG(OLD_FRAME(this));        <br>         <br>            if( old_frame != -1 )
            {
               this_obj = GET_OBJECT(Global.stack[old_frame-(THIS_OFFSET+old_num_args)]);
            }
         }
      }<br>      if( this_obj==null )
      {
         this_obj = InterpretCall.GLOBAL();
      }
      InterpretCall.RunCompiledCode( argc, argv, CallMain,this_obj,
                                     HowToInterpret);<br>   }</pre>
                                <p>&nbsp;</p>
                                <p>&nbsp;</p>
                              </ul>
                              <p><a name="430darrayinit"></a></p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>static
                                  Array initializer is not instanceof Object</b><br>
                                  (for ISDK/Java 4.30d)</font></li>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Bug:
                                  When an Array object is initialized with a static
                                  Array Initialiser, as in this code:</font></p>
                                <pre>   var foo = [ 1, 2, 3 ];</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">it
                                  is recognized as "instanceof Array" but is not
                                  recognized as "instanceof Object".</font></p>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix:</b>
                                  In Secode.jsrc, method interpret(), "case seCodeVal.instanceOf:",
                                  at about line 5797 is this comment:</font></p>
                                <pre>   /* at any rate, this is the last chance. */</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">to
                                  fix this bug, insert the following code ahead
                                  of the comment, so it reads:</font></p>
                                <pre>   /* finally. all objects inherit from Object */<br>   else if (call.ObjectPrototype ==<br>            functionPrototype.obj_val)<br>      result = true;<br>   /* at any rate, this is the last chance. */</pre>
                              </ul>
                              <p><a name="430dobjinit"></a></p>
                              <p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>empty
                                  Object initializer creates an Array object;
                                  should be an Object object</b><br>
                                  (for ISDK/Java 4.30d)</font></li>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Bug:
                                  When an object is initialized with the empty
                                  set, as in this code:</font></p>
                                <pre>   var foo = { };</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">it
                                  is initialized as a type Array object, although
                                  it should be an Object object.</font></p>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix:</b>
                                  In Secode.jsrc, class secompile, method Object(),
                                  at about line 3646, change this line:</font></p>
                                <pre>   if ( t[0].type != ':' )</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">to
                                  this:</font></p>
                                <pre>   if ( t[0].type != ':' && token.type != '}' )
                                 </pre>
                              </ul>
                              <p><a name="430dcontinueswitch"></a></p>
                              <p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif"><b><font size="2">"continue"
                                  within "switch" statement jumps to wrong condition</font></b></font><br>
                                  <font face="Verdana, Arial, Helvetica, sans-serif" size="2">(for
                                  ISDK/Java 4.30d)</font></li>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Bug:
                                  The "continue" statement, when within a "switch"
                                  block, will associate its condition with the
                                  "switch" statement instead of the enclosing
                                  loop.</font></p>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix:</b>
                                  In Secode.jsrc, around line 682, add this to
                                  the "loopTracker" class:</font></p>
                                <pre>   boolean is_switch;</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">at
                                  line 3172, in the secompile class, find the
                                  newLoop() method, and change its signature to
                                  this:</font></p>
                                <pre>   void newLoop( gotoItem label, boolean is_switch )</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">in
                                  Secode.jsrc, all calls to newLoop() get a second
                                  false parameter, except for the one in the Switch()
                                  method of the secompile class. That ones get
                                  true for its second parameter.</font></p>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Then,
                                  in Secode.jsrc, change the newLoop() method's
                                  body to look like this:</font></p>
                                <pre>   void newLoop( gotoItem label, boolean is_switch ) <br>   { <br>      loopTracker t = new loopTracker(); <br>      t.next = loopTrack; <br>      loopTrack = t; <br>      t.is_switch = is_switch;<br>      if ( label != null ) <br>         label.loop = t; <br>   }</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">and
                                  at line 725 of Secode.jsrc, in the loopTracker
                                  class, change the method addContinue to this:</font></p>
                                <pre>   void addContinue( int addr ) <br>   { <br>      if ( continuesUsed >= continuesAlloced ) <br>      { <br>         continuesAlloced += 10; <br>         int[] tmp = new int[continuesAlloced]; <br>         if( continues != null ) <br>            System.arraycopy( continues, 0, tmp, 0, continues.length ); <br>         continues = tmp;<br>      }
      continues[continuesUsed++] = addr;<br>   }</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">and
                                  finally, in Secode.jsrc, in the Statement()
                                  method of the secompile class, within the "case
                                  seTokVal.seTokContinue:", around line 1911,
                                  change this code:</font></p>
                                <pre>   it = this.gotoTrack.labels[x].loop;
   if ( it == null )</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">to:</font></p>
                                <pre>   it = this.gotoTrack.labels[x].loop;
   if ( it == null || (it.is_switch && !isbreak) )
                              </pre>
                              </ul>
                              <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a name="430dfloatwrite"></a></font></p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Floating
                                  point numbers not written correctly in jseCreateCodeTokenBuffer<br>
                                  </b>(for ISDK/Java 4.30d) </font>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Problem:
                                    When creating tokens with jseCreateCodeTokenBuffer,
                                    floating point numbers are written incorrectly.</font></p>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix:</b>
                                    In Token.jsrc, function writeNumber(), at
                                    line 248 change this line: </font></p>
                                </li>
                              </ul>
                              <blockquote>
                                <blockquote>
                                  <pre><font face="Verdana, Arial, Helvetica, sans-serif" size="2">if ( (double)n == n )</font></pre>
                                </blockquote>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">to:</font></p>
                                <blockquote>
                                  <pre><font face="Verdana, Arial, Helvetica, sans-serif" size="2">if ( (double)n32 = n )
</font></pre>
                                </blockquote>
                              </blockquote>
                              <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a name="430dfloatread"></a></font></p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Floating
                                  point numbers not read correctly when interpreting
                                  from token buffer<br>
                                  </b>(for ISDK/Java 4.30d)</font>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Problem:
                                    When interpreting from a precompiled token
                                    buffer, floating point numbers will not be
                                    read correctly.</font></p>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix:</b>
                                    In Token.jsrc, function readNumber_fromNumber(),
                                    at line 516 change this line:</font></p>
                                  <blockquote>
                                    <pre><font face="Verdana, Arial, Helvetica, sans-serif" size="2">return (double)val;</font></pre>
                                  </blockquote>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">
                                    to:</font></p>
                                  <blockquote>
                                    <pre><font face="Verdana, Arial, Helvetica, sans-serif" size="2">return Double.longBitsToDouble(val);</font></pre>
                                  </blockquote>
                                </li>
                              </ul>
                              <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a name="430derratic"></a></font></p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Scripts
                                  interpreted from a token buffer may display
                                  erratic behavior<br>
                                  </b>(for ISDK/Java 4.30d)</font>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Problem:
                                    When interpreting from a token buffer, goto
                                    labels may become all messed up.</font></p>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix</b>:
                                    In Token.jsrc, function AbsoluteGotoFromRelative(),
                                    at line 464 change this line:</font></p>
                                  <blockquote>
                                    <pre><font face="Verdana, Arial, Helvetica, sans-serif" size="2">for ( c = 0; 0 != opcodes[RelativeGoto--]; c++ )</font></pre>
                                  </blockquote>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">
                                    to:</font></p>
                                  <blockquote>
                                    <pre><font face="Verdana, Arial, Helvetica, sans-serif" size="2">
for ( c = 0; 0 != RelativeGoto--; c++ )</font></pre>
                                  </blockquote>
                                </li>
                              </ul>
                              <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a name="430dcharread"></a></font></p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Some
                                  characters not read correctly when interpreting
                                  from a token buffer<br>
                                  </b> (for ISDK/Java 4.30d)</font>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Problem:
                                    When interpreting from a token buffer, some
                                    characters may be read back incorrectly.</font></p>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix:</b>
                                    In Token.jsrc, function readString(), at line
                                    556 change this block of code:</font></p>
                                  <blockquote>
                                    <pre><font face="Verdana, Arial, Helvetica, sans-serif" size="2">for ( i = 0; i < len; i++ )
{
   char c;
   c = (char)(readByte() | (readByte()<<8));
   str.append( c );
}</font></pre>
                                  </blockquote>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">to:</font></p>
                                  <blockquote>
                                    <pre><font face="Verdana, Arial, Helvetica, sans-serif" size="2">for ( i = 0; i < len; i++ )
{
   char c;

   byte b1 = readByte();
   byte b2 = readByte();

   byte[] tmp = { b1, b2 };
   c = new String(tmp,0,2).charAt(0);

   str.append( c );
}

</font></pre>
                                  </blockquote>
                                </li>
                              </ul>
                              <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><b>for
                                4.30a --</b></font></p>
                              <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a name="430acontinue"></a></font></p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Continue
                                  statement in do/while skips while<br>
                                  (for ISDK/Java 4.30a)</b> </font>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Problem:
                                    continue used in a do/while loop not doing
                                    the while condition test, always going to
                                    top of loop</font></p>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Fix:
                                    In srccore/Secode.java function Do(), at the
                                    top of the function (about line 2028 ) add
                                    this new local variable:</font></p>
                                </li>
                              </ul>
                              <blockquote>
                                <blockquote>
                                  <pre><font face="Verdana, Arial, Helvetica, sans-serif" size="2">int cont_addr;</font></pre>
                                </blockquote>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">
                                  In the middle of the function, right before
                                  this existing line (line 2051):</font></p>
                                <blockquote>
                                  <pre><font face="Verdana, Arial, Helvetica, sans-serif" size="2">addItem( seCodeVal.seContinueFunc, prevLineNumber );</font></pre>
                                </blockquote>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">
                                  add:</font></p>
                                <blockquote>
                                  <pre><font face="Verdana, Arial, Helvetica, sans-serif" size="2">cont_addr = currentItem();</font></pre>
                                </blockquote>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">
                                  finally, at the bottom of the function, change
                                  this line (line 2068):</font></p>
                                <blockquote>
                                  <pre><font face="Verdana, Arial, Helvetica, sans-serif" size="2">endLoop( currentItem(), top_of_loop, label );</font></pre>
                                </blockquote>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">
                                  to:</font></p>
                                <blockquote>
                                  <pre><font face="Verdana, Arial, Helvetica, sans-serif" size="2">endLoop( currentItem(), cont_addr, label );</font></pre>
                                </blockquote>
                              </blockquote>
                              <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a name="se430apop"></a></font></p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Variables
                                  not being popped off of the stack properly<br>
                                  </b> (for ISDK/Java 4.30a)</font>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Problem:
                                    When compiling functions, some variables were
                                    not being popped off of the stack properly.</font></p>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix:</b>
                                    In srccore/Secode.java, function function()
                                    around line 2815, find the following code:</font></p>
                                  <blockquote>
                                    <pre><font face="Verdana, Arial, Helvetica, sans-serif" size="2">/* Create a constant for it. */
newfunc = new LocalFunction( call, name, cfunction, var );
i = locfunc.createConstant( call, var );


if ( !literal )

{
   j = locfunc.addLocal( call, name );
   locfunc.VarFunc[j] = i;
}


call.STACK_POP();</font></pre>
                                  </blockquote>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">
                                    and remove the call to STACK_POP(); At the
                                    end of the same function, find the following
                                    code (around line 2890):</font></p>
                                  <blockquote>
                                    <pre><font face="Verdana, Arial, Helvetica, sans-serif" size="2">return success;</font></pre>
                                  </blockquote>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">
                                    and replace it with:</font></p>
                                  <blockquote>
                                    <pre><font face="Verdana, Arial, Helvetica, sans-serif" size="2">call.STACK_POP();
return success;</font></pre>
                                    <p>&nbsp;</p>
                                  </blockquote>
                                </li>
                              </ul>
                              <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a name="se430asubtract"></a></font></p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Error
                                  when subtracting C-Strings<br>
                                  </b> (for ISDK/Java 4.30a)</font>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Problem:
                                    A NullPointer Exception occurs when subtracting
                                    C-strings</font></p>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix:</b>
                                    In srccore/Secode.java in the case statement
                                    for seCodeVal.seSubtract (around line 5785),
                                    change this line:</font></p>
                                  <blockquote>
                                    <pre><font face="Verdana, Arial, Helvetica, sans-serif" size="2">if ( lhs2.GET_OBJECT() != rhs.GET_OBJECT() ) </font></pre>
                                  </blockquote>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">
                                    to:</font></p>
                                  <blockquote>
                                    <pre><font face="Verdana, Arial, Helvetica, sans-serif" size="2">if ( lhs2.GET_STRING() != rhs.GET_STRING() )</font></pre>
                                  </blockquote>
                                </li>
                              </ul>
                              <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a name="430ashared"></a></font></p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>jseSetSharedData()
                                  not adding data correctly<br>
                                  </b>(for ISDK/Java 4.30a)</font>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Problem:
                                    After the first call to jseSetSharedData(),
                                    subsequent calls write over previous data.</font></p>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix:</b>
                                    In srccore/Call.java in jseSetSharedData,
                                    find the following section of code (around
                                    line 5349):</font></p>
                                  <blockquote>
                                    <pre><font face="Verdana, Arial, Helvetica, sans-serif" size="2">newNode = new sharedDataNode();
newNode.next = Global.sharedDataList;
newNode = new sharedDataNode();</font></pre>
                                  </blockquote>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">
                                    and remove the second call to sharedDataNode's
                                    constructor.</font></p>
                                </li>
                              </ul>
                              <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a name="430acallstack"></a></font></p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>NullPointer
                                  exception when using jseCallStackInfo()<br>
                                  </b> (for ISDK/Java 4.30a)</font>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Problem:
                                    A NullPointer exception is thrown when using
                                    jseCallStackInfo()</font></p>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix:</b>
                                    In srccore/Call.java function jseCallStackInfo()
                                    (around line 5140), find the following line:</font></p>
                                  <blockquote>
                                    <pre><font face="Verdana, Arial, Helvetica, sans-serif" size="2">num_args = Global.stack[fptr - ARGS_OFFSET].GET_STORAGE_LONG();</font></pre>
                                  </blockquote>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">
                                    and replace it with this line:</font></p>
                                  <blockquote>
                                    <pre><font face="Verdana, Arial, Helvetica, sans-serif" size="2">nargs = Global.stack[fptr - ARGS_OFFSET].GET_STORAGE_LONG();</font></pre>
                                    <p>&nbsp;</p>
                                  </blockquote>
                                </li>
                              </ul>
                              <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a name="430aback"></a></font></p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Error
                                  when moving backwards in C-string<br>
                                  </b> (for ISDK/Java 4.30a)</font>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Problem:
                                    An ArrayIndexOutOfBounds Exception is thrown
                                    when attempting to move back in a C-string</font></p>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix:</b>
                                    In srccore/seVar.java there is a function
                                    getValue with the following signture: final
                                    boolean getValue( Call call, int mem, seVar
                                    dest ). Near the end of this function, find
                                    this section of code (around line 990):</font></p>
                                  <blockquote>
                                    <pre><font face="Verdana, Arial, Helvetica, sans-serif" size="2">String data = getData( call );
/* will go back, but we've verified there is enough stuff to read from */
INIT_NUMBER(dest, (double)data.charAt( loc ) );
</font></pre>
                                  </blockquote>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">
                                    change this section to this:</font></p>
                                  <blockquote>
                                    <pre><font face="Verdana, Arial, Helvetica, sans-serif" size="2">int off = getDataOffset( call );

seString data = GET_STRING();

INIT_NUMBER(dest, (double)data.data.charAt( off+loc ) );</font></pre>
                                  </blockquote>
                                  <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">You
                                    will also have to add the function getDataOffset
                                    to the seVar class. The source can be found
                                    at <a href="ftp://ftp.nombas.com/pub/isdkeval/se430/dataOffset.txt">ftp://ftp.nombas.com/pub/isdkeval/se430/dataOffset.txt</a>.
                                    </font></p>
                                </li>
                              </ul>
                              <p>&nbsp;</p>
                              <p>&nbsp;</p>
                              </font><!-- #EndEditable --></td>
                    </tr>
                    <tr>
                      <td width="1">&nbsp;</td>
                      <td width="460">&nbsp;</td>
                    </tr>
                  </table>
                  </TD>
              </TR>
            </TABLE>
          </TD>
        </TR>
      </TABLE>
    </TD>
  </TR>
  <TR VALIGN=TOP ALIGN=LEFT>
    <TD HEIGHT=2 width="5"></TD>
    <TD COLSPAN=2 height="2">
            <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=100% HEIGHT=20 bgcolor="#FFFFFF">
              <TR ALIGN=LEFT VALIGN=TOP>
          <TD>
                  <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=100%>
                    <TR VALIGN=TOP ALIGN=LEFT>
                <TD WIDTH=20 HEIGHT=2 ALIGN=LEFT VALIGN=TOP><IMG ID="Picture13" HEIGHT=20 WIDTH=20 SRC="../../../curve_botleft.gif" BORDER=0></TD>
                      <TD height="2"><IMG SRC="../../../clearpixel.gif" WIDTH=592 HEIGHT=1 BORDER=0></TD>
                <TD WIDTH=20 ALIGN=LEFT VALIGN=TOP height="2"><IMG ID="Picture11" HEIGHT=20 WIDTH=20 SRC="../../../curve_bot.gif" BORDER=0></TD>
              </TR>
            </TABLE>
          </TD>
        </TR>
      </TABLE>
    </TD>
  </TR>
  <TR VALIGN=TOP ALIGN=LEFT>
    <TD WIDTH=5 HEIGHT=6><IMG SRC="../../../clearpixel.gif" WIDTH=5 HEIGHT=1 BORDER=0></TD>
    <TD WIDTH=613><IMG SRC="../../../clearpixel.gif" WIDTH=613 HEIGHT=1 BORDER=0></TD>
    <TD WIDTH=22><IMG SRC="../../../clearpixel.gif" WIDTH=19 HEIGHT=1 BORDER=0></TD>
  </TR>
  <TR VALIGN=TOP ALIGN=LEFT>
    <TD COLSPAN=2>
            <P ALIGN=RIGHT><A HREF="../../../index.htm"><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">Home</FONT></A><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">
              | </FONT><A
                 HREF="../../../scripting/scripting.htm"><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">Scripting</FONT></A><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">
              | </FONT><A
                 HREF="../../../products/products.htm"><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">Products</FONT></A><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">
              | </FONT><A
                 HREF="../../../purchase/purchase.htm"><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">Purchase</FONT></A><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">
              | </FONT><A
                 HREF="../../../download/ndownload.htm"><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">Download</FONT></A><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">
              | </FONT><A
                 target="support" HREF="http://support.nombas.com/"><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">Support</FONT></A><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">
              | </FONT><A HREF="../../../company/company.htm"> <FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">Company</FONT></A><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica"><BR>
        <BR>
        Copyright &#169;2001, Nombas, Inc. All Rights Reserved.<BR>
        Questions? Visit </FONT><A HREF="http://support.nombas.com/"><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">http://support.nombas.com/</FONT></A>
    </TD>
    <TD width="22"></TD>
  </TR>
</TABLE>
</td>
  </tr>
</table>
<SCRIPT language=JavaScript1.2>
  display_nombas_legacy_message();
</SCRIPT>
</BODY>
<!-- #EndTemplate --></HTML>
