
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 FINAL//EN">
<HTML><!-- #BeginTemplate "/us/Templates/erratapage.dwt" -->
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<!-- #BeginEditable "doctitle" -->
<TITLE>ScriptEase ISDK/Java 5.01x Errata</TITLE>
<!-- #EndEditable --> <!-- begin metaTags -->
<META NAME="keywords" CONTENT="javascript,ecmascript,ecma,scriptease,jscript,scripting,nombas,isdk,sedesk,web application development,embedded devices,distributed computing,peer-to-peer,p2p,peer,data mining,javascript.com,cycletraders,integrated sdk,script ease,java,c++,c,simplicity,power,palm,windows ce,integration: sdk,integration:sdk,scriptease:desktop,scriptease: desktop,se:desktop,se:desk,se:isdk, se: isdk,development tools,devtools">
<META HTTP-EQUIV="DESCRIPTION" CONTENT="Nombas delivers simplicity and power through scripting by providing market-leading development tools and software for JavaScript and ECMAScript.">
<!-- end metaTags -->
<!-- begin navbar includes -->
<SCRIPT language=JavaScript1.2>
  navbarPath = '../../../';
</SCRIPT>
<SCRIPT language=JavaScript1.2 SRC="../../../navbarData.js"></SCRIPT>
<SCRIPT language=JavaScript1.2 SRC="../../../navbarMenu.js"></SCRIPT>
<SCRIPT language=JavaScript SRC="../../../imgRollover.js"></SCRIPT>
<!-- end navbar includes -->
<!-- begin style and icon definition -->
<LINK REL="SHORTCUT ICON" HREF="../../../nombas.ico">
<STYLE>
A:hover { color:#941810;}
</STYLE>
<!-- end style and icon definition -->
<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-1754630-10']);
  _gaq.push(['_trackPageview']);
  (function() {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = ('https:' == document.location.protocol ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>
</HEAD>
<BODY BGCOLOR="#06086F" LINK="#0000FF" VLINK="#800080" TEXT="#000000" TOPMARGIN=0 LEFTMARGIN=0 MARGINWIDTH=0 MARGINHEIGHT=0>
<table width="632" border="0" cellspacing="0" cellpadding="0">
  <tr>
    <td>
<TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=213>
  <TR VALIGN=TOP ALIGN=LEFT>
    <TD WIDTH=28 HEIGHT=4><IMG SRC="../../../clearpixel.gif" WIDTH=28 HEIGHT=1 BORDER=0></TD>
    <TD></TD>
  </TR>
  <TR VALIGN=TOP ALIGN=LEFT>
    <TD HEIGHT=60></TD>
          <TD WIDTH=185 ALIGN=LEFT VALIGN=TOP><A HREF="../../../index.htm"><IMG ID="Picture1" HEIGHT=60 WIDTH=185 SRC="../../../logo.gif" BORDER=0 alt="Nombas Homepage"></A></TD>
  </TR>
</TABLE>
    <div id="nombas-legacy"></div>
<TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0>
  <TR VALIGN=TOP ALIGN=LEFT>
    <TD WIDTH=30 HEIGHT=10><IMG SRC="../../../clearpixel.gif" WIDTH=30 HEIGHT=1 BORDER=0></TD>
    <TD></TD>
  </TR>
  <TR VALIGN=TOP ALIGN=LEFT>
    <TD></TD>
    <TD WIDTH=582>
      <TABLE ID="Table1" BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=582>
        <TR>
          <TD WIDTH=97>
                  <P><A HREF="../../../scripting/scripting.htm"
                            onmouseover="changeImages('scripting', '../../../htab_scripting.gif'); popUp('elMenu1',event); return true;"
onmouseout="changeImages('scripting', '../../../tab_scripting.gif'); popDown('elMenu1'); return true;"
><IMG
                             ID="scripting" HEIGHT=21 WIDTH=97 SRC="../../../tab_scripting.gif" VSPACE=0 HSPACE=0 ALIGN="TOP" BORDER=0 name="scripting" alt="Scripting"></A>
                </TD>
          <TD WIDTH=97>
                  <P><A HREF="../../../products/products.htm"
                            onmouseover="changeImages('products', '../../../htab_products.gif'); popUp('elMenu2',event); return true;"
onmouseout="changeImages('products', '../../../tab_products.gif'); popDown('elMenu2'); return true;"><IMG ID="products"
                             HEIGHT=21 WIDTH=97 SRC="../../../tab_products.gif" VSPACE=0 HSPACE=0 ALIGN="TOP" BORDER=0 name=products alt="Products"></A>
                </TD>
          <TD WIDTH=97>
                  <P><A HREF="../../../purchase/purchase.htm" onmouseover="changeImages('purchase', '../../../htab_purchase.gif');return true;"
onmouseout="changeImages('purchase', '../../../tab_purchase.gif');return true;"><IMG ID="purchase"
                             HEIGHT=21 WIDTH=97 SRC="../../../tab_purchase.gif" VSPACE=0 HSPACE=0 ALIGN="TOP" BORDER=0 name=purchase alt="Purchase"></A>
                </TD>
          <TD WIDTH=97>
                  <P><A HREF="../../../download/ndownload.htm" onmouseover="changeImages('download', '../../../htab_download.gif');return true;"
onmouseout="changeImages('download', '../../../tab_download.gif');return true;"><IMG ID="download"
                             HEIGHT=21 WIDTH=97 SRC="../../../tab_download.gif" VSPACE=0 HSPACE=0 ALIGN="TOP" BORDER=0 name=download alt="Download"></A>
                </TD>
          <TD WIDTH=97>
                  <P><A target="support" HREF="http://support.nombas.com/" onmouseover="changeImages('support', '../../../htab_support.gif'); return true;"
onmouseout="changeImages('support', '../../../tab_support.gif'); return true;"><IMG ID="support"
                             HEIGHT=21 WIDTH=97 SRC="../../../tab_support.gif" VSPACE=0 HSPACE=0 ALIGN="TOP" BORDER=0 name=support alt="Support"></A>
                </TD>
          <TD WIDTH=97>
                  <P><A HREF="../../../company/company.htm"
                            onmouseover="changeImages('company', '../../../htab_company.gif'); popUp('elMenu6',event); return true;"
onmouseout="changeImages('company', '../../../tab_company.gif'); popDown('elMenu6'); return true;"><IMG ID="company"
                             HEIGHT=21 WIDTH=97 SRC="../../../tab_company.gif" VSPACE=0 HSPACE=0 ALIGN="TOP" BORDER=0 name=company alt="Company"></A>
                </TD>
        </TR>
      </TABLE>
    </TD>
  </TR>
</TABLE>
      <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=100%>
        <TR VALIGN=TOP ALIGN=LEFT>
    <TD WIDTH=5 HEIGHT=20><IMG SRC="../../../clearpixel.gif" WIDTH=5 HEIGHT=1 BORDER=0></TD>
          <TD>
            <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=100% HEIGHT=20 bgcolor="#FFFFFF">
              <TR ALIGN=LEFT VALIGN=TOP>
          <TD>
                  <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=100%>
                    <TR VALIGN=TOP ALIGN=LEFT>
                <TD WIDTH=20 HEIGHT=20 ALIGN=LEFT VALIGN=TOP><IMG ID="Picture12" HEIGHT=20 WIDTH=20 SRC="../../../curve_topleft.gif" BORDER=0></TD>
                      <TD><IMG SRC="../../../clearpixel.gif" WIDTH=592 HEIGHT=1 BORDER=0></TD>
                <TD WIDTH=20 ALIGN=LEFT VALIGN=TOP><IMG ID="Picture10" HEIGHT=20 WIDTH=20 SRC="../../../curve_top.gif" BORDER=0></TD>
              </TR>
            </TABLE>
          </TD>
        </TR>
      </TABLE>
    </TD>
  </TR>
</TABLE>
<TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=637>
  <TR VALIGN=TOP ALIGN=LEFT>
    <TD HEIGHT=471 width="5"></TD>
    <TD COLSPAN=2 height="471">
      <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=632 HEIGHT=200 bgcolor="#FFFFFF">
        <TR ALIGN=LEFT VALIGN=TOP>
          <TD height="471">
            <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=516>
              <TR VALIGN=TOP ALIGN=LEFT>
                <TD WIDTH=14 HEIGHT=1><IMG SRC="../../../clearpixel.gif" WIDTH=13 HEIGHT=1 BORDER=0></TD>
                <TD WIDTH=502><IMG SRC="../../../clearpixel.gif" WIDTH=316 HEIGHT=1 BORDER=0></TD>
              </TR>
              <TR VALIGN=TOP ALIGN=LEFT>
                <TD width="14"></TD>
                <TD WIDTH=502><!-- #BeginEditable "hier" -->
                        <P ALIGN=LEFT><A HREF="../../../index.htm"><FONT SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">Nombas</FONT></A><FONT SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">
                          &gt; <a HREF="../../index.htm">SE:ISDK DevSpace</a>
                          &gt; <a href="../index.htm">Errata</a> &gt; Integration
                          SDK 5.01x Errata</FONT>
                        <!-- #EndEditable --></TD>
              </TR>
            </TABLE>
            <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=300>
              <TR VALIGN=TOP ALIGN=LEFT>
                <TD WIDTH=15 HEIGHT=5><IMG SRC="../../../clearpixel.gif" WIDTH=15 HEIGHT=1 BORDER=0></TD>
                <TD></TD>
              </TR>
              <TR VALIGN=TOP ALIGN=LEFT>
                <TD HEIGHT=80></TD>
                <TD WIDTH=600 ALIGN=LEFT VALIGN=TOP><IMG ID="Picture14" HEIGHT=80 WIDTH=600 SRC="../../bnr_devspace.gif" BORDER=0></TD>
              </TR>
              <TR VALIGN=TOP ALIGN=LEFT>
                <TD HEIGHT=368></TD>
                <TD WIDTH=600 ALIGN=LEFT VALIGN=TOP height="368">
                  <table width="100%" border="0">
                    <tr>
                      <td colspan="4" height="9"><img SRC="../../../clearpixel.gif" width="1" height="1"></td>
                    </tr>
                    <tr>
                      <td width="1" height="326">&nbsp;</td>
                            <td valign="top" height="326"><!-- #BeginEditable "main" --> 
                              <p><font size="4" face="Verdana, Arial, Helvetica, sans-serif"><b>Integration 
                                SDK 5.01x Errata</b></font><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><br>
                                <i><b>Fixes Affecting Users of the ScriptEase 
                                ISDKs</b></i></font></p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#v501b">5.01b 
                                  API</a> - latest update: June 8, 2004</font></li>
                              </ul>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a href="#v501a">5.01a 
                                  API</a> - latest update: March 19, 2004</font></li>
                              </ul>
                              <font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a name="v501b"></a> 
                              API Errata, version <b>5.01b</b><br>
                              &nbsp;&nbsp;<b>New</b>, June 8, 2004</font> 
                              <ul>
                                <li><a href="#ifmca"><font face="Verdana, Arial, Helvetica, sans-serif" size="2">inner function may cause assertion in Call.jsrc</font></a>
                                <li><a href="#srnil"><font face="Verdana, Arial, Helvetica, sans-serif" size="2">string.replace() 
                                  may get caught in near-infinite loop</font></a><a href="#exrp"><font face="Verdana, Arial, Helvetica, sans-serif" size="2"></font></a> 
                                <li><a href="#sibnro"><font face="Verdana, Arial, Helvetica, sans-serif" size="2">string.replace() 
                                  incorrect if first arguments is not a RegExp 
                                  object</font></a>
                              </ul>
                              <hr width="90%">
                              <font face="Verdana, Arial, Helvetica, sans-serif" size="2"><a name="v501a"></a> 
                              API Errata, version <b>5.01a</b><br>
                              &nbsp;&nbsp;<b>New</b>, March 19, 2004</font> 
                              <ul>
                                <li><a href="#gsmb"><font face="Verdana, Arial, Helvetica, sans-serif" size="2">seGetSourceFunc() callback being called an extra time when script is missing a closing brace</font></a> 
                                <li><a href="#pxuva"><font face="Verdana, Arial, Helvetica, sans-serif" size="2">seMustPutXXX() and seMustPutDirectXXX() unsetting most variable attributes</font></a> 
                                <li><a href="#pwivf"><font face="Verdana, Arial, Helvetica, sans-serif" size="2">sePutWrapper() ignoring the variable attributes</font></a> 
                                <li><a href="#12amutc"><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Date 
                                  parser not recognizing 12 AM or &quot;UTC&quot;</font></a> 
                                <li><a href="#fccs"><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Function 
                                  constructor causes swapping for created functions</font></a> 
                                <li><a href="#smsrn"><font face="Verdana, Arial, Helvetica, sans-serif" size="2">String 
                                  match function should return null on no match</font></a> 
                                <li><a href="#segcc2"><font face="Verdana, Arial, Helvetica, sans-serif" size="2">seGetSourceFunc(...seSourceGetLine...) 
                                  called twice if first call returns False</font></a> 
                                <li><a href="#e12e2"><font face="Verdana, Arial, Helvetica, sans-serif" size="2">SE_GF_NOCALLBACKS 
                                  errata fix causes SE_GF_DIRECT failure on strings</font></a> 
                                <li><a href="#ssieo"><font face="Verdana, Arial, Helvetica, sans-serif" size="2">string.split 
                                  returns undefined element 0 if no match </font></a> 
                                <li><a href="#crasc"><font face="Verdana, Arial, Helvetica, sans-serif" size="2">converting 
                                  a recursive array to a string can crash </font></a> 
                                <li><a href="#dcnp"><font face="Verdana, Arial, Helvetica, sans-serif" size="2">no 
                                  flag provided to bypass dynamic callbacks, but 
                                  allow for prototype chain </font></a> 
                                <li><a href="#cbrftalvr"><font face="Verdana, Arial, Helvetica, sans-serif" size="2">calling 
                                  byref function turns all local variables into 
                                  references </font></a> 
                                <li><font size="2" face="Verdana, Arial, Helvetica, sans-serif"><a href="#tmgcb">too 
                                  many callbacks for global get and for hasprop 
                                  returning HP_DIRECTCHECK</a></font> 
                              </ul>
                              <hr width="90%">
                              <p> 
                              <p><font face="Verdana, Arial, Helvetica, sans-serif" size="3"><b>The 
                                Details</b> </font></p>
                              <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>for 
                                5.01b</b> -- <font face="Verdana, Arial, Helvetica, sans-serif" size="2">(may 
                                apply to earlier version)</font></font></p>
                              <p><a name="ifmca"></a></p>
                              <p> 
                              <ul>
                                <li> <font face="Verdana, Arial, Helvetica,
                                  sans-serif" size="2"> <b><font face="Verdana, Arial, Helvetica, sans-serif" size="2">inner function may cause assertion in Call.jsrc</font></b><br>
                                  (for ISDK/Java 5.01b) </font> </li>
                              </ul>
                              <blockquote> 
                                <p> <font face="Verdana, Arial,
                                Helvetica, sans-serif" size="2"> <font face="Verdana, Arial, Helvetica, sans-serif">Issue: 
                                  A function containing an inner function may cause an assertion to be thrown around line 2153 (`SEVAR_GET_TYPE(wv)>=VReference').</font></font> 
                                <p> <font face="Verdana, Arial, Helvetica, sans-serif" size="2"> 
                                  <b> Fix </b> : In COM/Nombas/jse/Isdk/Call.jsrc around line 9619 there is a block of code like this: </font>
                                  <pre><font face="Courier New,Courier, mono" size="2"></font><font face="Courier New,Courier, mono" size="2">   if( (flags&SE.START) != 0 )
      {
         EvalFuncStart start_info = new EvalFuncStart();

         if( start_info==null )</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">On the line just above that if statement, add this statement: </font> 
                                <pre> <font face="Courier New,Courier, mono" size="2">   SEVAR_INIT_UNDEFINED(CALL_NEWSCOPE(this));</font></pre>
                                </blockquote>
                              <p><a name="srnil"></a></p>
                              <p> 
                              <ul>
                                <li> <font face="Verdana, Arial, Helvetica,
                                  sans-serif" size="2"> <b><font face="Verdana, Arial, Helvetica, sans-serif" size="2">string.replace() 
                                  may get caught in near-infinite loop</font></b><br>
                                  (for ISDK/Java 5.01b) </font> </li>
                              </ul>
                              <blockquote> 
                                <p> <font face="Verdana, Arial,
                                Helvetica, sans-serif" size="2"> <font face="Verdana, Arial, Helvetica, sans-serif">Issue: 
                                  If string.replace() is called using the global 
                                  flag and such that the result of the search 
                                  expression replaces the null-patch at the end 
                                  of the line, then replace may run for a long 
                                  long while (until a memory object is returned). 
                                  This is an example of a problem script.</font></font> 
                                <pre><font face="Courier New, Courier, mono" size="2">   &quot;a&quot;.replace( /a*/g, &quot;stuff&quot; );</font></pre>
                                <p> <font face="Verdana, Arial, Helvetica, sans-serif" size="2"> 
                                  <b> Fix </b> : In COM/Nombas/jse/libraries/ECMAString.jsrc make 
                                  the following changes:</font>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">1) 
                                  near line 872 replace the definition of the 
                                  replace_string() method from this: </font> 
                                <pre> <font face="Courier New,Courier, mono" size="2">   private static void replace_string(... </font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">to 
                                  this </font></p>
                                <pre><font face="Courier New,Courier, mono" size="2"></font><font face="Courier New,Courier, mono" size="2">   private static int replace_string(...</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">2) 
                                  add the following return statement at the end of the replace_string() method 
                                    (around line 1042):</font></p>
                                <pre><font face="Courier New,Courier, mono" size="2">   return replace_text.length();</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">3) 
                                  in function string_search_helper(), near 
                                  line 1272, follow this line:</font></p>
                                <pre><font face="Courier New,Courier, mono" size="2">   SEObject eval_ret = se.seGetObject(SE.RETURN,SE.VALUE);</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">with 
                                  this additional line</font></p>
                                <pre><font face="Courier New,Courier, mono" size="2">   int replace_len = 0;</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">and 
                                  about seven lines below that replace</font></p>
                                <pre><font face="Courier New,Courier, mono" size="2">   replace_string(se,se.seGetObject(eval_ret,SE.VALUE) ...</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"> 
                                  with</font></p>
                                <pre><font face="Courier New,Courier, mono" size="2">   replace_len = replace_string(se,se.seGetObject(eval_ret,SE.VALUE) ...</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">4) 
                                  around line 3788 of the same function replace 
                                  this block</font></p>
                                <pre><font face="Courier New,Courier, mono" size="2">   if( new_index==last_index )
</font><font face="Courier New,Courier, mono" size="2">   {
      new_index++;</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">with 
                                  this</font></p>
                                <pre><font face="Courier New,Courier, mono" size="2">   if( new_index == (last_index+replace_len) )
</font><font face="Courier New,Courier, mono" size="2">   {
      new_index = 1 + (last_index+replace_len);</font></pre>
                                </blockquote>
                              <p><a name="sibnro"></a></p>
                              <p> 
                              <ul>
                                <li> <font face="Verdana, Arial, Helvetica, sans-serif" size="2"> 
                                  <font face="Verdana, Arial, Helvetica, sans-serif" size="2"> 
                                  <b> <font face="Verdana, Arial, Helvetica, sans-serif" size="2">string.replace() 
                                  incorrect if first arguments is not a RegExp 
                                  object</font></b></font><br>
                                  (for ISDK/Java 5.01b) </font> </li>
                              </ul>
                              <blockquote> 
                                <p> <font face="Verdana, Arial, Helvetica, sans-serif" size="2"> 
                                  Bug: If the first parameter to String.prototype.replace() 
                                  is not a RegExp object then it will be compiled 
                                  into a RegExp object. This is incorrect behavior 
                                  and based on an incomplete version of the EcmaScript 
                                  specification. Instead, if the first arguments 
                                  is not a RegExp object then it should be converted 
                                  into a string and a direct string replacement 
                                  should follow. </font> </p>
                                <p> <font face="Verdana, Arial, Helvetica, sans-serif" size="2"> 
                                  <b> Fix </b> : In COM/Nombas/jse/libraries/ECMAString.jsrc, replace 
                                  the function Ecma_String_replace() at about 
                                  line 1364 with both functions in the code at <a href="ftp://ftp.nombas.com/pub/isdkeval/se501/ecma_string_replace.jsrc">ftp://ftp.nombas.com/pub/isdkeval/se501/ecma_string_replace.jsrc</a></font></p>
                              </blockquote>
                              <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>for 
                                5.01a</b> --</font></p>
                              <p><a name="gsmb"></a></p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b><font face="Verdana, Arial, Helvetica, sans-serif" size="2">seGetSourceFunc() callback being called an extra time when script is missing a closing brace</font></b><br>
                                  (for ISDK/Java 5.01a)</font></li>
                              </ul>
                              <blockquote> 
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Issue:
                                  When a script that is missing a closing brace ('}') is being compiled by
the ScriptEase engine, the seGetSourceFunc() method of the SEGetSourceFunc
interface gets called by the engine with the SE.SOURCE_GETLINE flag one time too
many. That is to say, after the seGetSourceFunc() has been called with the
SE.SOURCE_GETLINE flag and has returned false once, on the next call to
seGetSourceFunc() the ScriptEase engine should pass it the SE.SOURCE_CLOSE flag,
but instead the engine calls it one more time passing it the SE.SOURCE_GETLINE
flag before calling it a final time passing it the SE.SOURCE_CLOSE flag. This
can be a source of error if the seGetSourceFunc()'s SE.SOURCE_GETLINE handler
does not expect to be called anymore once it has returned false to the
ScriptEase engine.</font> 
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix</b>:
                                  To fix this issue, go to the statement() method in
COM/Nombas/jse/Isdk/SECompile.jsrc. Within the switch statement, there is a case
statement for the character '{'. In that case statement (at approx. line 3915),
add the following code inside the while() loop, before the code already in that
loop:</font>
                                </p>
                                <pre>   if ( tokType(this.token)==seTokEOF )
   {
      success = false;
      call.quit(TextCore.BAD_PRIMARY);
      break;
   }</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">
                                  So now your while() loop should look like this:</font>
                                </p>
                                <pre>   while( tokType(this.token)!='}' )
   {
      if ( tokType(this.token)==seTokEOF )
      {
         success = false;
         call.quit(TextCore.BAD_PRIMARY);
         break;
      }

      if( !this.statement() )
      {
         success = false;
         break;
      }
   }</pre>
                              </blockquote>
                              <p><a name="pxuva"></a></p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b><font face="Verdana, Arial, Helvetica, sans-serif" size="2">seMustPutXXX() and seMustPutDirectXXX() unsetting most variable attributes</font></b><br>
                                  (for ISDK/Java 5.01a)</font></li>
                              </ul>
                              <blockquote> 
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Bug:
                                  The seMustPutXXX() and seMustPutDirectXXX() functions strip variable
attributes, such as SE.DONTENUM and SE.READONLY, from the variable on which they
are called.</font> 
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix</b>:
                                  A simple workaround is to call seSetAttribs after calling seMustPutXXX()
and seMustPutDirectXXX(). Or to fix the source code in
COM/Nombas/jse/Isdk/Call.jsrc, method sePutMember(), at about line 7188
replace:</font>
                                </p>
                                <pre>   obj.newMember(this,name,tmp,
                  SE.DEFAULT,SE_OBJECT.SE_NM_UPDATE);</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">
                                  with:</font>
                                </p>
                                <pre>   obj.newMember(this,name,tmp,
                  attrib,SE_OBJECT.SE_NM_UPDATE);</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">
                                  Also, at about line 7251 replace:</font>
                                </p>
                                <pre>   obj.newMember(this,name,tmp,
                  SE.DEFAULT,SE_OBJECT.SE_NM_UPDATE);</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">
                                  with:</font>
                                </p>
                                <pre>   obj.newMember(this,name,tmp,
                  attrib,SE_OBJECT.SE_NM_UPDATE);</pre>
                              </blockquote>
                              <p><a name="pwivf"></a></p>
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b><font face="Verdana, Arial, Helvetica, sans-serif" size="2">sePutWrapper() ignoring the variable attributes</font></b><br>
                                  (for ISDK/Java 5.01a)</font></li>
                              </ul>
                              <blockquote> 
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Bug:
                                  The sePutWrapper() variable attributes (such as SE.DONTENUM) are being ignored.</font> 
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix</b>:
                                  A simple workaround is to call seSetAttribs after calling
sePutWrapper(). Or to fix the source code in COM/Nombas/jse/Isdk/Call.jsrc,
method sePutWrapperEx(), at about line 9003 replace:</font>
                                </p>
                                <pre>   ret = call.sePutMember(obj,memdesc,flags);</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">
                                  with:</font>
                                </p>
                                <pre>   if ( !call.sePutMember(obj,memdesc,flags) || SE.DEFAULT != desc.VarAttrFlags )
      this.seSetAttribs(obj,memdesc,desc.VarAttrFlags);</pre>
                              </blockquote>
                              <p><a name="12amutc"></a></p>
                              <p> 
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Date 
                                  parser not recognizing 12 AM or &quot;UTC&quot;</font></b><br>
                                  (for ISDK/Java 5.01a)</font></li>
                              </ul>
                              <blockquote> 
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Problem: 
                                  When parsing a date/time with &quot;12:00 AM 
                                  UTC&quot; the date parser is not recognizing 
                                  this as midnight, but is instead registering 
                                  that time as noon. Also, although the ECMAScript 
                                  specification sets &quot;GMT&quot; as the tag 
                                  for declaring universal time, it has become 
                                  common to also use &quot;UTC&quot;</font>. 
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Change</b>: 
                                  In COM/Nombas/jse/libraries/SEDate.jsrc, method 
                                  do_parse(String), at around line 632, just before 
                                  the comment that begins "/* if there is a PM 
                                  anywhere..." add this code: </font></p>
                                <pre>   /* if it is 12, but 12 AM, then that time is really 0 */ 
   if ( (time[0] == 12) && (DateBuf.indexOf("am")!= -1) ) 
      time[0] = 0;</pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">and 
                                  then around line 758 change this code:</font></p>
                                <pre>   gmt = DateBuf.indexOf("gmt"); 
   if ( gmt == -1 )</pre>
                                <p><font size="2" face="Verdana, Arial, Helvetica, sans-serif">to 
                                  this:</font></p>
                                <pre>   if ( (-1 == (gmt = DateBuf.indexOf("gmt"))) 
     &amp;& (-1 == (gmt = DateBuf.indexOf("utc"))) )

<a name="fccs"></a></pre>
                              </blockquote>
                              <p> 
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Function 
                                  constructor causes swapping for created functions</font></b><br>
                                  (for ISDK/Java 5.01a)</font></li>
                              </ul>
                              <blockquote> 
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Problem: 
                                  When JSE_MULTIPLE_GLOBAL is defined (the default), 
                                  any anonymous function created at runtime with 
                                  the Function constructor will preserve the global 
                                  from when the Function library was loaded (usually 
                                  at program initialization). This will cause 
                                  the global to change to the original global 
                                  whenever that anonymous function is later called.</font> 
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Change</b>: 
                                  To keep the Function constructor from restoring 
                                  its own global replace add the SE_KEEP_GLOBAL 
                                  line 2294 of COM/Nombas/jse/libraries/ECMAObject.jsrc 
                                  so it becomes</font><font face="Verdana, Arial, Helvetica, sans-serif" size="2">:</font> 
                                </p>
                                <pre>   SE.CLASS( JseStr.Function, WRAPPER_FUNC(Ecma_Function_construct), 0, -1,
             SE.SECURE|SE.KEEP_GLOBAL, SE.DONTENUM ),</pre>
                              </blockquote>
                              <p><a name="smsrn"></a></p>
                              <p> 
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b><font face="Verdana, Arial, Helvetica, sans-serif" size="2">String 
                                  match function should return null on no match</font></b><br>
                                  (for ISDK/Java 5.01a)</font></li>
                              </ul>
                              <blockquote> 
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Issue: 
                                  According to the commonly recognized ECMAScript 
                                  Edition 3 Errata, string.match should return 
                                  NULL if there are no items matched. This differs 
                                  from the ECMAScript document, and from our 5.01a 
                                  code, which would return a zero-length array.</font> 
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Change</b>: 
                                  To get the return-null behavior, In COM/Nombas/jse/libraries/ECMAString.jsrc, 
                                  near the end of string_which_search_helper() 
                                  (at about line 1334) replace this code</font><font face="Verdana, Arial, Helvetica, sans-serif" size="2">:</font> 
                                </p>
                                <pre><font face="Courier New, Courier, mono" size="2">   if( mode==SE_MATCH_MODE )
   {
      se.sePutObject(SE.RETURN,SE.VALUE,ret);
   }</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"> 
                                  with </font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   </font>if( mode==SE_MATCH_MODE )
   {
      if ( array_index == 0 )
      {
         /* this part of the code is a result of the ECMA-262 errata */
         se.sePutNull(SE.RETURN,SE.VALUE);
      }
      else
      {
         se.sePutObject(SE.RETURN,SE.VALUE,ret);
      }
   }</pre>
                              </blockquote>
                              <p><a name="segcc2"></a></p>
                              <p> 
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>seGetSourceFunc(...seSourceGetLine...) 
                                  called twice if first call returns False</b></font><br>
                                  (for ISDK/Java 5.01a)</font></li>
                              </ul>
                              <blockquote> 
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Bug: 
                                  If seGetSourceFunc(...SE.SOURCE_GETLINE...) 
                                  returns false the first time it is called, it 
                                  will be called again a second time.</font> 
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix</b>: 
                                  In COM/Nombas/jse/Isdk/Source.jsrc, method newFromFile(), 
                                  change the code after !This.nextLine() (around 
                                  line 190) from</font><font face="Verdana, Arial, Helvetica, sans-serif" size="2">:</font> 
                                </p>
                                <pre><font face="Courier New, Courier, mono" size="2">   This.MemoryPtr = new SourcePtr("\0");</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"> 
                                  to</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   </font>Success[0] = false; </pre>
                              </blockquote>
                              <p><a name="ssieo"></a></p>
                              <p> 
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>string.split 
                                  returns undefined element 0 if no match</b></font><br>
                                  (for ISDK/Java 5.01a)</font></li>
                              </ul>
                              <blockquote> 
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Bug: 
                                  If String.prototype.split(delimeter) is called, 
                                  but there is no delimeter matched, then this 
                                  function should return a 1-element array with 
                                  the original string as element 0. Instead it 
                                  is wrongly returning and undefined type as element 
                                  0.</font> 
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix</b>: 
                                  In COM/Nombas/jse/libraries/ECMAString.jsrc, 
                                  function Ecma_String_split, at about line 425 
                                  this statement</font><font face="Verdana, Arial, Helvetica, sans-serif" size="2">:</font> 
                                </p>
                                <pre><font face="Courier New, Courier, mono" size="2">   se.seAssign(ret,SE.NUM(se.seGetLong(ret,SE.STOCK(JseStrID.length))),
               SE.WRAPPER_TEMP, SE.MEM("temp"));</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">should 
                                  be changed to:</font></p>
                                <pre>   se.sePutString(ret,SE.NUM(se.seGetLong(ret,SE.STOCK(JseStrID.length))),str);</pre>
                              </blockquote>
                              <p><a name="crasc"></a></p>
                              <p> 
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>converting 
                                  a recursive array to a string can crash</b></font><br>
                                  (for ISDK/Java 5.01a)</font></li>
                              </ul>
                              <blockquote> 
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Bug: 
                                  In an array contains a recursive element that 
                                  recursively refers back to the array, and if 
                                  the array is then converted to a string, then 
                                  the scriptease engine will crash. The following 
                                  script demonstrates the problem:</font> 
                                <pre><font face="Courier New, Courier, mono" size="2">   var a = new Array( &quot;a&quot;, &quot;b&quot;, &quot;c&quot; );
   a[1] = new Array( a, 2, 3 );
   var foo = &quot;&quot; + a; // will crash here from recursion</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix</b>: 
                                  In COM/Nombas/jse/libraries/ECMAObject.jsrc, 
                                  method Ecma_Array_join, after the declaration 
                                  of variables (around line 624) add this block</font><font face="Verdana, Arial, Helvetica, sans-serif" size="2">:</font> 
                                </p>
                                <pre><font face="Courier New, Courier, mono" size="2">   /* if this object was already visited, then just return a blank string */
   if ( se.seExists(SE.THIS,SE.HIDDEN_MEM(PREVENT_RECURSION_NAME)) )
   {
      se.sePutString(SE.RETURN,SE.VALUE,"");
      return;
   }
   se.sePutBool(SE.THIS,SE.HIDDEN_MEM(PREVENT_RECURSION_NAME),true);</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">and 
                                  add the following as the final line of function 
                                  Ecma_Array_join:</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   se.seDelete(SE.THIS, SE.HIDDEN_MEM(PREVENT_RECURSION_NAME));
</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Finally, 
                                  add this line outside the of the Ecma_Array_join 
                                  method:</font></p>
                                <pre>   private static final String PREVENT_RECURSION_NAME = "join recursed";<font face="Courier New, Courier, mono" size="2">                                   </font><font face="Courier New, Courier, mono" size="2"></font></pre>
                                </blockquote>
                              <p><a name="dcnp"></a></p>
                              <p> 
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>no 
                                  flag provided to bypass dynamic callbacks, but 
                                  allow for prototype chain</b></font><br>
                                  (for ISDK/Java 5.01a)</font></li>
                              </ul>
                              <blockquote> 
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Bug: 
                                  SE.GF_DIRECT (as used by the seGetDirect and 
                                  seGetEx calls) bypasses the dynamic callbacks 
                                  and the prototype chain. SE.GF_NOPROTOTYPE bypasses 
                                  the prototype chain but not the callbacks. There 
                                  is no corresponding call to skip dynamic callbacks 
                                  but still allow access via the prototype chain.</font> 
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix</b>: 
                                  Add a new SE.GF_NOCALLBACKS option to bypass 
                                  callbacks but still allow access via the prototype 
                                  chain. This fix assumes that the<a href="#tmgcb"> 
                                  HP_DIRECTCHECK errata</a> has already been applied. 
                                  In COM/Nombas/jse/Isdk/SE.jsrc</font><font face="Verdana, Arial, Helvetica, sans-serif" size="2"> 
                                  at about line 113 replace this line:</font> 
                                <pre><font face="Courier New, Courier, mono" size="2">   public final static int GF_DIRECT =             0x001;</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">with 
                                  these two lines:</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   public final static int GF_NOCALLBACKS =        0x001;
   public final static int GF_DIRECT =             (GF_NOPROTOTYPE|GF_NOCALLBACKS);</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">and 
                                  in COM/Nombas/jse/Isdk/AbstractVar.jsrc near 
                                  line 67 and in COM/Nombas/jse/Isdk/_SEVar.jsrc 
                                  near line 279 change</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   static final int GV_NO_PROTOTYPE = SE.GF_NOPROTOTYPE;
   static final int GV_NO_DYNAMIC =   SE.GF_NOCALLBACKS;</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">to</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   static final int GV_NO_PROTOTYPE = SE.GF_NOPROTOTYPE;
   static final int GV_NO_DYNAMIC =   SE.GF_NOCALLBACKS;</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">and 
                                  then in COM/Nombas/jse/Isdk/Call.jsrc and COM/Nombas/jse/Isdk/SEContext.jsrc 
                                  change every reference from</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   SE.GF_DIRECT</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">to</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   SE.GF_NOCALLBACKS</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">and 
                                  also in COM/Nombas/jse/Isdk/Call.jsrc, function 
                                  notThere(), at around line 6593 change</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   direct = true;</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">to</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   flags |= SE.GF_NOCALLBACKS;</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">finally, 
                                  about 17 lines later, replace this block:</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2"> int f = ( ((flags & SE.GF_DIRECT) != 0) || direct )
    ? ( SE_VAR.GV_NO_PROTOTYPE | SE_VAR.GV_NO_DYNAMIC )
    : ( ( (flags & SE.GF_NOPROTOTYPE) != 0 ) ? SE_VAR.GV_NO_PROTOTYPE :
         SE_VAR.GV_DEFAULT );
    SEVAR_INIT_OBJECT(tmpobj,obj);

    ret = tmpobj.getValue(this,name,this.api_temp,f);</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">with 
                                  this</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   SEVAR_INIT_OBJECT(tmpobj,obj);
   ret = tmpobj.getValue(this,name,this.api_temp,flags);</font></pre>
                              </blockquote>
                              <p><a name="cbrftalvr"></a></p>
                              <p> 
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>calling 
                                  byref function turns all local variables into 
                                  references</b><br>
                                  (for ISDK/Java 5.01a)</font></li>
                              </ul>
                              <blockquote> 
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Bug: 
                                  If a byref function is called from within another 
                                  function, all of the local variables in the 
                                  outer function will be turned into references.</font> 
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix</b>: 
                                  In COM/Nombas/jse/Isdk/Secode.jsrc, method interpret(), 
                                  near line 1002 this block of code:</font> 
                                <pre><font face="Courier New, Courier, mono" size="2"> if( FUNCTION_PASSBYREF(function) ||
    (FUNCTION_IS_LOCAL(function) &&
    with_tmp < ((LocalFunction)function).localItems.InputParameterCount &&
    ((LocalFunction)function).localItems.items[with_tmp].VarAttrib != 0) )
 {
    /* In this case we have pass-by-reference */
    SEVAR_INIT_UNDEFINED(w_lhs);
    if( CALL_VAROBJ(call)==null )
       call.createVariableObject(null,0);
 }

 SEVAR_COPY(w_lhs,w_rhs);

 break;</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">should 
                                  be changed to this code:</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">  if( FUNCTION_PASSBYREF(function) ||
     (FUNCTION_IS_LOCAL(function) &&
     with_tmp < ((LocalFunction)function).localItems.InputParameterCount &&
     ((LocalFunction)function).localItems.items[with_tmp].VarAttrib != 0) )
  {
     /* In this case we have pass-by-reference */
     SEVAR_INIT_UNDEFINED(w_lhs);
     if( CALL_VAROBJ(call)==null )
        call.createVariableObject(null,0);

     SEVAR_COPY(w_lhs,w_rhs);

  }
  else
  {
     /* The local variable could be a reference into the variable object.
      * If this is true, it will be passed by reference even though it
      * should not be. To avoid this, we now copy the variable to the stack
      * and dereference it.
      */
      SEVAR_COPY(w_lhs,w_rhs);
      SEVAR_DEREFERENCE(call,w_lhs);
  }

  break;</font></pre>
                              </blockquote>
                              <p><a name="tmgcb"></a></p>
                              <p> 
                              <ul>
                                <li><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>too 
                                  many callbacks for global get and for hasprop 
                                  returning HP_DIRECTCHECK</b><br>
                                  (for ISDK/Java 5.01a)</font></li>
                              </ul>
                              <blockquote> 
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Bug: 
                                  If the global object has a get callback, then 
                                  get is called too often while initializing code. 
                                  Also, if any hasProp callback is returning HP_DIRECTCHECK 
                                  then the get callback is being called, although 
                                  it shouldn't.</font></p>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"><b>Fix</b>: 
                                  In COM/Nombas/jse/Isdk/Call.jsrc, method function(), 
                                  near line 2122 this block of code:</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   SE_VAR wLoc = STACK_PUSH(this);
   SE_VAR wTmp = STACK_PUSH(this);

   SEVAR_INIT_UNDEFINED(wTmp);
   SEVAR_INIT_OBJECT(wLoc,CALL_VAROBJ(this));
   wLoc.getDotNamedVar(this,this.GetStringTableEntry(ourname),
                       SE.DEFAULT);

   if( hif_func!=null )
   {
      SEVAR_INIT_OBJECT(wTmp,hif_func);
  
      if ( VObject == SEVAR_GET_TYPE(CALL_NEWSCOPE(this)) )
      {
         SE_OBJECT hobj;
      
         hobj = SEVAR_GET_OBJECT(CALL_NEWSCOPE(this));
         assert( null != hobj );
         if( 0&lt;hobj.used )
         {
            wTmp.data = hobj;
         }
      }
   }
   else
   {
      SEVAR_INIT_UNDEFINED(wTmp);
   }</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">should 
                                  be changed to this code:</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   SE_VAR wLoc = STACK_PUSH(this);
   SE_VAR wTmp = STACK_PUSH(this);
   
   if( hif_func!=null )
   {
      SEVAR_INIT_OBJECT(wTmp,hif_func);
      SEVAR_INIT_OBJECT(wLoc,CALL_VAROBJ(this));
      wLoc.getDotNamedVar(this,this.GetStringTableEntry(ourname),
                          SE.DEFAULT);
      if ( VObject == SEVAR_GET_TYPE(CALL_NEWSCOPE(this)) )
      {
         SE_OBJECT hobj;
         
         hobj = SEVAR_GET_OBJECT(CALL_NEWSCOPE(this));
         assert( null != hobj );
         if( 0&lt;hobj.used )
         {
            wTmp.data = hobj;
         }
      }
   }
   else
   {
      SEVAR_INIT_UNDEFINED(wTmp);
      SEVAR_INIT_REFERENCE(wLoc,CALL_VAROBJ(this),ourname);
   }
</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">Then 
                                  in COM/Nombas/jse/Isdk/Call.jsrc method notThere(), 
                                  near line 6566 replace the else block that begins 
                                  with this line:</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   SE_VAR tmpobj = STACK_PUSH(this);</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">with 
                                  this block</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   SE_VAR tmpobj = STACK_PUSH(this);
   direct = false;
   
#  if JSE_DYNAMIC_CALLBACKS==1
   ret = true;
   SEVAR_INIT_UNDEFINED(tmpobj);
   /* If the object says it does not have the property,
    * believe it. Return false with the undefined value.
    */
   if( (flags&SE.GF_NOCALLBACKS)==0
       && SEOBJ_IS_DYNAMIC_PROP(this,obj,SEHasPropCallback)
       && !this.Global.stringTable.isHiddenProp(name) )
   {
      if( obj.callDynamicProperty(this,SE.HASPROP_CALLBACK,
                                  name,null,tmpobj) )
      {
         if ( SE.HP_HASNOT == SEVAR_GET_SLONG(tmpobj) )
         {
            ret = false;
            SEVAR_INIT_UNDEFINED(this.api_temp);
         }
      }
      else
      {
         if ( VNumber == SEVAR_GET_TYPE(tmpobj) )
         {
            if ( SE.HP_DIRECTCHECK == SEVAR_GET_SLONG(tmpobj) )
               direct = true;
         }
      }
   }
   
   if( ret )
      
#  endif
   {
      int f = ( ((flags & SE.GF_DIRECT) != 0) || direct )
         ? ( SE_VAR.GV_NO_PROTOTYPE | SE_VAR.GV_NO_DYNAMIC )
         : ( ( (flags & SE.GF_NOPROTOTYPE) != 0 ) ? SE_VAR.GV_NO_PROTOTYPE :
             SE_VAR.GV_DEFAULT );
      SEVAR_INIT_OBJECT(tmpobj,obj);
      
      ret = tmpobj.getValue(this,name,this.api_temp,f);
   }
   
   
   STACK_POP(this);</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">And 
                                  in COM/Nombas/jse/Isdk/_SEObject.jsrc, method 
                                  seobjCallDynamicProperty(), replace "case SE.HASPROP_CALLBACK:" 
                                  around line 1097 with this code: </font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   case SE.HASPROP_CALLBACK:
   {
      int cp = DYNA_CALLBACK1(((SEHasPropCallback)cb).hasProp,prop_name);
      
      if ( cp < 0 )
      {
         assert( cp==SE.HP_CHECK || cp==SE.HP_DIRECTCHECK );
         done = false;
      }
      else
      {
         assert( cp==SE.HP_HAS || cp==SE.HP_HASNOT );
      }
      assert( result!=null );
      SEVAR_INIT_SLONG(result_tmp,cp);
      break;
   }</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">then 
                                  around line 1354 replace these lines (in the 
                                  hasProperty()) method:</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   STACK_POP(this);
   
</font><font face="Courier New, Courier, mono" size="2">   /* Call the 'get' to get the property */</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">with 
                                  this block</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   else
   {
      /* that hasprop callback may have returned HP_DIRECTCHECK which means we act as
       * if there were no callbacks at all
       */
      if ( VNumber == SEVAR_GET_TYPE(value) )
      {
         if ( SE.HP_DIRECTCHECK == SEVAR_GET_SLONG(value) )
         {
            //STACK_POP(call); /* value */
            goto_standard_directcheck = true;
         }
      }
   }
   
   STACK_POP(call); /* value */

   /* Call the 'get' to get the property */</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2">next, 
                                  around line 1380 find this code</font></p>
                                <pre><font face="Courier New, Courier, mono" size="2">   /* Call the 'get' to get the property */
   
   /* either no dynamic _hasProperty (!handled) or
    * _hasProperty says 'yes it has the property' and
    * dest is not NULL, so we need to retrieve the property
    * In either case, we have to do a dynamic get because we
    * need the value
    */
   if ( (rhs=dest)==null )
   {
      rhs = STACK_PUSH(call);
      SEVAR_INIT_OBJECT(rhs,this);
   }
   /* can't use SEVAR_DEREFERENCE because this
    * could be a real dynamic object
    */
   
#  if JSE_ALWAYS_COLLECT==1
   /* on some occasions calldyna will happen and GC may happen, so force it always */
   Garbage.garbageCollect(call);
#  endif
   
   if( this.callDynamicProperty(call,SE.GET_CALLBACK,propname,null,rhs) )
   {
      /* If hasProperty says yes, then undefined means undefined. Otherwise,
       * Undefined is the only way to differentiate a has it from does not
       * have it.
       */
      boolean ret = (SEVAR_GET_TYPE(rhs)!=VUndefined) || handled;
      if( ret && (flags&HP_REFERENCE)!=0 )
      {
         SEVAR_INIT_REFERENCE(rhs,this,propname);
      }
      if ( dest==null )
      {
         STACK_POP(call);
      }
      return ret;
   }
   if ( dest==null )
   {
      STACK_POP(call);
   }</font></pre>
                                <p><font face="Verdana, Arial, Helvetica, sans-serif" size="2"> 
                                  </font><font face="Verdana, Arial, Helvetica, sans-serif" size="2">and 
                                  change it to this (wrap it in an if-block):</font></p>
                                <pre>   if ( !goto_standard_directcheck )
   {

      /* Call the 'get' to get the property */
            
      /* either no dynamic _hasProperty (!handled) or
       * _hasProperty says 'yes it has the property' and
       * dest is not NULL, so we need to retrieve the property
       * In either case, we have to do a dynamic get because we
       * need the value
       */
      if ( (rhs=dest)==null )
      {
         rhs = STACK_PUSH(call);
         SEVAR_INIT_OBJECT(rhs,this);
      }
      /* can't use SEVAR_DEREFERENCE because this
       * could be a real dynamic object
       */

#     if JSE_ALWAYS_COLLECT==1
      /* on some occasions calldyna will happen and GC may happen, so force it always */
      Garbage.garbageCollect(call);
#     endif

      if( this.callDynamicProperty(call,SE.GET_CALLBACK,propname,null,rhs) )
      {
         /* If hasProperty says yes, then undefined means undefined. Otherwise,
          * Undefined is the only way to differentiate a has it from does not
          * have it.
          */
         boolean ret = (SEVAR_GET_TYPE(rhs)!=VUndefined) || handled;
         if( ret && (flags&HP_REFERENCE)!=0 )
         {
            SEVAR_INIT_REFERENCE(rhs,this,propname);
         }
         if ( dest==null )
         {
            STACK_POP(call);
         }
         return ret;
      }
      if ( dest==null )
      {
         STACK_POP(call);
      }
   }
</pre>
                                <p>finally, add this line at the top of the hasProperty() 
                                  method</p>
                                <pre>   boolean goto_standard_directcheck = false;
                                 </pre>
                                <pre><font face="Courier New, Courier, mono" size="2">      </font></pre>
                              </blockquote>
                              <p>
                              <blockquote>&nbsp;</blockquote>
                              <!-- #EndEditable --></td>
                    </tr>
                    <tr>
                      <td width="1">&nbsp;</td>
                      <td width="460">&nbsp;</td>
                    </tr>
                  </table>
                  </TD>
              </TR>
            </TABLE>
          </TD>
        </TR>
      </TABLE>
    </TD>
  </TR>
  <TR VALIGN=TOP ALIGN=LEFT>
    <TD HEIGHT=2 width="5"></TD>
    <TD COLSPAN=2 height="2">
            <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=100% HEIGHT=20 bgcolor="#FFFFFF">
              <TR ALIGN=LEFT VALIGN=TOP>
          <TD>
                  <TABLE BORDER=0 CELLSPACING=0 CELLPADDING=0 WIDTH=100%>
                    <TR VALIGN=TOP ALIGN=LEFT>
                <TD WIDTH=20 HEIGHT=2 ALIGN=LEFT VALIGN=TOP><IMG ID="Picture13" HEIGHT=20 WIDTH=20 SRC="../../../curve_botleft.gif" BORDER=0></TD>
                      <TD height="2"><IMG SRC="../../../clearpixel.gif" WIDTH=592 HEIGHT=1 BORDER=0></TD>
                <TD WIDTH=20 ALIGN=LEFT VALIGN=TOP height="2"><IMG ID="Picture11" HEIGHT=20 WIDTH=20 SRC="../../../curve_bot.gif" BORDER=0></TD>
              </TR>
            </TABLE>
          </TD>
        </TR>
      </TABLE>
    </TD>
  </TR>
  <TR VALIGN=TOP ALIGN=LEFT>
    <TD WIDTH=5 HEIGHT=6><IMG SRC="../../../clearpixel.gif" WIDTH=5 HEIGHT=1 BORDER=0></TD>
    <TD WIDTH=613><IMG SRC="../../../clearpixel.gif" WIDTH=613 HEIGHT=1 BORDER=0></TD>
    <TD WIDTH=22><IMG SRC="../../../clearpixel.gif" WIDTH=19 HEIGHT=1 BORDER=0></TD>
  </TR>
  <TR VALIGN=TOP ALIGN=LEFT>
    <TD COLSPAN=2>
            <P ALIGN=RIGHT><A HREF="../../../index.htm"><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">Home</FONT></A><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">
              | </FONT><A
                 HREF="../../../scripting/scripting.htm"><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">Scripting</FONT></A><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">
              | </FONT><A
                 HREF="../../../products/products.htm"><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">Products</FONT></A><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">
              | </FONT><A
                 HREF="../../../purchase/purchase.htm"><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">Purchase</FONT></A><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">
              | </FONT><A
                 HREF="../../../download/ndownload.htm"><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">Download</FONT></A><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">
              | </FONT><A
                 target="support" HREF="http://support.nombas.com/"><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">Support</FONT></A><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">
              | </FONT><A HREF="../../../company/company.htm"> <FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">Company</FONT></A><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica"><BR>
        <BR>
        Copyright &#169;2001, Nombas, Inc. All Rights Reserved.<BR>
        Questions? Visit </FONT><A HREF="http://support.nombas.com/"><FONT COLOR="#FFFFFF" SIZE="-2" FACE="Verdana,Tahoma,Arial,Helvetica">http://support.nombas.com/</FONT></A>
    </TD>
    <TD width="22"></TD>
  </TR>
</TABLE>
</td>
  </tr>
</table>
<SCRIPT language=JavaScript1.2>
  display_nombas_legacy_message();
</SCRIPT>
</BODY>
<!-- #EndTemplate --></HTML>
